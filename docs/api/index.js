Index.PACKAGES = {"scalafix" : [{"name" : "scalafix.Versions", "shortDescription" : "This object was generated by sbt-buildinfo.", "object" : "scalafix\/Versions$.html", "members_object" : [{"label" : "toString", "tail" : ": String", "member" : "scalafix.Versions.toString", "link" : "scalafix\/Versions$.html#toString:String", "kind" : "val"}, {"label" : "sbtVersion", "tail" : ": String", "member" : "scalafix.Versions.sbtVersion", "link" : "scalafix\/Versions$.html#sbtVersion:String", "kind" : "val"}, {"label" : "scala212", "tail" : ": String", "member" : "scalafix.Versions.scala212", "link" : "scalafix\/Versions$.html#scala212:String", "kind" : "val"}, {"label" : "scala211", "tail" : ": String", "member" : "scalafix.Versions.scala211", "link" : "scalafix\/Versions$.html#scala211:String", "kind" : "val"}, {"label" : "supportedScalaVersions", "tail" : ": Seq[String]", "member" : "scalafix.Versions.supportedScalaVersions", "link" : "scalafix\/Versions$.html#supportedScalaVersions:Seq[String]", "kind" : "val"}, {"label" : "scalaVersion", "tail" : ": String", "member" : "scalafix.Versions.scalaVersion", "link" : "scalafix\/Versions$.html#scalaVersion:String", "kind" : "val"}, {"label" : "semanticdbSbt", "tail" : ": String", "member" : "scalafix.Versions.semanticdbSbt", "link" : "scalafix\/Versions$.html#semanticdbSbt:String", "kind" : "val"}, {"label" : "scalameta", "tail" : ": String", "member" : "scalafix.Versions.scalameta", "link" : "scalafix\/Versions$.html#scalameta:String", "kind" : "val"}, {"label" : "nightly", "tail" : ": String", "member" : "scalafix.Versions.nightly", "link" : "scalafix\/Versions$.html#nightly:String", "kind" : "val"}, {"label" : "coursier", "tail" : ": String", "member" : "scalafix.Versions.coursier", "link" : "scalafix\/Versions$.html#coursier:String", "kind" : "val"}, {"label" : "stableVersion", "tail" : ": String", "member" : "scalafix.Versions.stableVersion", "link" : "scalafix\/Versions$.html#stableVersion:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "scalafix.Versions.version", "link" : "scalafix\/Versions$.html#version:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scalafix.Versions.name", "link" : "scalafix\/Versions$.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/Versions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/Versions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/Versions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/Versions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/Versions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/Versions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/Versions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/Versions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/Versions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/Versions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/Versions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/Versions$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/Versions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/Versions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/Versions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/Versions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/Versions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scalafix.XtensionOptionPatch", "shortDescription" : "", "members_class" : [{"label" : "asPatch", "tail" : "(): Patch", "member" : "scalafix.XtensionOptionPatch.asPatch", "link" : "scalafix\/package$$XtensionOptionPatch.html#asPatch:scalafix.package.Patch", "kind" : "def"}, {"member" : "scalafix.XtensionOptionPatch#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/package$$XtensionOptionPatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/package$$XtensionOptionPatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/package$$XtensionOptionPatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/package$$XtensionOptionPatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/package$$XtensionOptionPatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/package$$XtensionOptionPatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/package$$XtensionOptionPatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionOptionPatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionOptionPatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionOptionPatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/package$$XtensionOptionPatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/package$$XtensionOptionPatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/package$$XtensionOptionPatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/package$$XtensionOptionPatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/package$$XtensionOptionPatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/package$$XtensionOptionPatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/package$$XtensionOptionPatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/package$$XtensionOptionPatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/package$$XtensionOptionPatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/package$$XtensionOptionPatch.html", "kind" : "class"}, {"name" : "scalafix.XtensionSeqPatch", "shortDescription" : "", "members_class" : [{"label" : "asPatch", "tail" : "(): Patch", "member" : "scalafix.XtensionSeqPatch.asPatch", "link" : "scalafix\/package$$XtensionSeqPatch.html#asPatch:scalafix.package.Patch", "kind" : "def"}, {"member" : "scalafix.XtensionSeqPatch#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/package$$XtensionSeqPatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/package$$XtensionSeqPatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/package$$XtensionSeqPatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/package$$XtensionSeqPatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/package$$XtensionSeqPatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/package$$XtensionSeqPatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/package$$XtensionSeqPatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionSeqPatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionSeqPatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/package$$XtensionSeqPatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/package$$XtensionSeqPatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/package$$XtensionSeqPatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/package$$XtensionSeqPatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/package$$XtensionSeqPatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/package$$XtensionSeqPatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/package$$XtensionSeqPatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/package$$XtensionSeqPatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/package$$XtensionSeqPatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/package$$XtensionSeqPatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/package$$XtensionSeqPatch.html", "kind" : "class"}], "scalafix.testkit" : [{"name" : "scalafix.testkit.DiffAssertions", "members_trait" : [{"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "scalafix\/testkit\/DiffAssertions.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "scalafix\/testkit\/DiffAssertions.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "scalafix\/testkit\/DiffAssertions.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "scalafix\/testkit\/DiffAssertions.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "fileModificationTimeOrEpoch", "tail" : "(file: File): String", "member" : "scalafix.testkit.DiffAssertions.fileModificationTimeOrEpoch", "link" : "scalafix\/testkit\/DiffAssertions.html#fileModificationTimeOrEpoch(file:java.io.File):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: Seq[String], revised: Seq[String]): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/DiffAssertions.html#compareContents(original:Seq[String],revised:Seq[String]):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: String, revised: String): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/DiffAssertions.html#compareContents(original:String,revised:String):String", "kind" : "def"}, {"label" : "trailingSpace", "tail" : "(str: String): String", "member" : "scalafix.testkit.DiffAssertions.trailingSpace", "link" : "scalafix\/testkit\/DiffAssertions.html#trailingSpace(str:String):String", "kind" : "def"}, {"label" : "assertNoDiff", "tail" : "(obtained: String, expected: String, title: String): Boolean", "member" : "scalafix.testkit.DiffAssertions.assertNoDiff", "link" : "scalafix\/testkit\/DiffAssertions.html#assertNoDiff(obtained:String,expected:String,title:String):Boolean", "kind" : "def"}, {"label" : "error2message", "tail" : "(obtained: String, expected: String): String", "member" : "scalafix.testkit.DiffAssertions.error2message", "link" : "scalafix\/testkit\/DiffAssertions.html#error2message(obtained:String,expected:String):String", "kind" : "def"}, {"label" : "DiffFailure", "tail" : "", "member" : "scalafix.testkit.DiffAssertions.DiffFailure", "link" : "scalafix\/testkit\/DiffAssertions.html#DiffFailureextendsTestFailedExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "header", "tail" : "(t: T): String", "member" : "scalafix.testkit.DiffAssertions.header", "link" : "scalafix\/testkit\/DiffAssertions.html#header[T](t:T):String", "kind" : "def"}, {"label" : "assertEqual", "tail" : "(a: A, b: A): Unit", "member" : "scalafix.testkit.DiffAssertions.assertEqual", "link" : "scalafix\/testkit\/DiffAssertions.html#assertEqual[A](a:A,b:A):Unit", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.FunSuiteLike.testDataFor", "link" : "scalafix\/testkit\/DiffAssertions.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.FunSuiteLike.styleName", "link" : "scalafix\/testkit\/DiffAssertions.html#styleName:String", "kind" : "final val"}, {"label" : "testsFor", "tail" : "(unit: Unit): Unit", "member" : "org.scalatest.FunSuiteLike.testsFor", "link" : "scalafix\/testkit\/DiffAssertions.html#testsFor(unit:Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FunSuiteLike.run", "link" : "scalafix\/testkit\/DiffAssertions.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTests", "link" : "scalafix\/testkit\/DiffAssertions.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.FunSuiteLike.tags", "link" : "scalafix\/testkit\/DiffAssertions.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTest", "link" : "scalafix\/testkit\/DiffAssertions.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.FunSuiteLike.testNames", "link" : "scalafix\/testkit\/DiffAssertions.html#testNames:Set[String]", "kind" : "def"}, {"label" : "ignore", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.ignore", "link" : "scalafix\/testkit\/DiffAssertions.html#ignore(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "test", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.test", "link" : "scalafix\/testkit\/DiffAssertions.html#test(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerIgnoredTest", "link" : "scalafix\/testkit\/DiffAssertions.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerTest", "link" : "scalafix\/testkit\/DiffAssertions.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.FunSuiteLike.markup", "link" : "scalafix\/testkit\/DiffAssertions.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.FunSuiteLike.alert", "link" : "scalafix\/testkit\/DiffAssertions.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.FunSuiteLike.note", "link" : "scalafix\/testkit\/DiffAssertions.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.FunSuiteLike.info", "link" : "scalafix\/testkit\/DiffAssertions.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "scalafix\/testkit\/DiffAssertions.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "scalafix\/testkit\/DiffAssertions.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "scalafix\/testkit\/DiffAssertions.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "scalafix\/testkit\/DiffAssertions.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "scalafix\/testkit\/DiffAssertions.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "scalafix\/testkit\/DiffAssertions.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/DiffAssertions.html#execute:Unit", "kind" : "final def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/DiffAssertions.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "scalafix\/testkit\/DiffAssertions.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "scalafix\/testkit\/DiffAssertions.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "scalafix\/testkit\/DiffAssertions.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "scalafix\/testkit\/DiffAssertions.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "scalafix\/testkit\/DiffAssertions.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/DiffAssertions.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/DiffAssertions.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/DiffAssertions.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/DiffAssertions.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/DiffAssertions.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/DiffAssertions.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/DiffAssertions.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/DiffAssertions.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/DiffAssertions.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/DiffAssertions.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "scalafix\/testkit\/DiffAssertions.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "scalafix\/testkit\/DiffAssertions.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "scalafix\/testkit\/DiffAssertions.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "scalafix\/testkit\/DiffAssertions.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "scalafix\/testkit\/DiffAssertions.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "scalafix\/testkit\/DiffAssertions.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/DiffAssertions.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/DiffAssertions.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/DiffAssertions.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "scalafix\/testkit\/DiffAssertions.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/DiffAssertions.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "scalafix\/testkit\/DiffAssertions.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "scalafix\/testkit\/DiffAssertions.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "scalafix\/testkit\/DiffAssertions.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "scalafix\/testkit\/DiffAssertions.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/DiffAssertions.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/DiffAssertions.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/DiffAssertions.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/DiffAssertions.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/DiffAssertions.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/DiffAssertions.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "scalafix\/testkit\/DiffAssertions.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/DiffAssertions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/DiffAssertions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/DiffAssertions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/DiffAssertions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/DiffAssertions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/DiffAssertions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/DiffAssertions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffAssertions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffAssertions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffAssertions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/DiffAssertions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/DiffAssertions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/testkit\/DiffAssertions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/DiffAssertions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/testkit\/DiffAssertions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/testkit\/DiffAssertions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/DiffAssertions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/DiffAssertions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/DiffAssertions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scalafix\/testkit\/DiffAssertions.html", "kind" : "trait"}, {"name" : "scalafix.testkit.DiffTest", "shortDescription" : "", "object" : "scalafix\/testkit\/DiffTest$.html", "members_object" : [{"label" : "testToRun", "tail" : "(tests: Seq[DiffTest]): Seq[DiffTest]", "member" : "scalafix.testkit.DiffTest.testToRun", "link" : "scalafix\/testkit\/DiffTest$.html#testToRun(tests:Seq[scalafix.testkit.DiffTest]):Seq[scalafix.testkit.DiffTest]", "kind" : "def"}, {"label" : "fromSemanticdbIndex", "tail" : "(index: SemanticdbIndex): Seq[DiffTest]", "member" : "scalafix.testkit.DiffTest.fromSemanticdbIndex", "link" : "scalafix\/testkit\/DiffTest$.html#fromSemanticdbIndex(index:scalafix.SemanticdbIndex):Seq[scalafix.testkit.DiffTest]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/DiffTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/DiffTest$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/DiffTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/DiffTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/DiffTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/DiffTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/DiffTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/DiffTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/DiffTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/testkit\/DiffTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/DiffTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/testkit\/DiffTest$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/testkit\/DiffTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/DiffTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/DiffTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/DiffTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "originalStr", "tail" : "(): String", "member" : "scalafix.testkit.DiffTest.originalStr", "link" : "scalafix\/testkit\/DiffTest.html#originalStr:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scalafix.testkit.DiffTest.name", "link" : "scalafix\/testkit\/DiffTest.html#name:String", "kind" : "def"}, {"member" : "scalafix.testkit.DiffTest#<init>", "error" : "unsupported entity"}, {"label" : "isOnly", "tail" : ": Boolean", "member" : "scalafix.testkit.DiffTest.isOnly", "link" : "scalafix\/testkit\/DiffTest.html#isOnly:Boolean", "kind" : "val"}, {"label" : "isSkip", "tail" : ": Boolean", "member" : "scalafix.testkit.DiffTest.isSkip", "link" : "scalafix\/testkit\/DiffTest.html#isSkip:Boolean", "kind" : "val"}, {"label" : "config", "tail" : ": () ⇒ (Rule, internal.config.ScalafixConfig)", "member" : "scalafix.testkit.DiffTest.config", "link" : "scalafix\/testkit\/DiffTest.html#config:()=>(scalafix.Rule,scalafix.internal.config.ScalafixConfig)", "kind" : "val"}, {"label" : "document", "tail" : ": scala.meta.Document", "member" : "scalafix.testkit.DiffTest.document", "link" : "scalafix\/testkit\/DiffTest.html#document:meta.Document", "kind" : "val"}, {"label" : "original", "tail" : ": scala.meta.Input", "member" : "scalafix.testkit.DiffTest.original", "link" : "scalafix\/testkit\/DiffTest.html#original:meta.Input", "kind" : "val"}, {"label" : "filename", "tail" : ": scala.meta.RelativePath", "member" : "scalafix.testkit.DiffTest.filename", "link" : "scalafix\/testkit\/DiffTest.html#filename:meta.RelativePath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/DiffTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/DiffTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/DiffTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/DiffTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/DiffTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/DiffTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/DiffTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/DiffTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/DiffTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/DiffTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/DiffTest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/DiffTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/DiffTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/DiffTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/testkit\/DiffTest.html", "kind" : "case class"}, {"name" : "scalafix.testkit.SemanticRuleSuite", "shortDescription" : "", "object" : "scalafix\/testkit\/SemanticRuleSuite$.html", "members_class" : [{"label" : "DiffFailure", "tail" : "", "member" : "scalafix.testkit.DiffAssertions.DiffFailure", "link" : "scalafix\/testkit\/DiffAssertions.html#DiffFailureextendsTestFailedExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "runAllTests", "tail" : "(): Unit", "member" : "scalafix.testkit.SemanticRuleSuite.runAllTests", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#runAllTests():Unit", "kind" : "def"}, {"label" : "testsToRun", "tail" : ": Seq[DiffTest]", "member" : "scalafix.testkit.SemanticRuleSuite.testsToRun", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#testsToRun:Seq[scalafix.testkit.DiffTest]", "kind" : "lazy val"}, {"label" : "afterAll", "tail" : "(): Unit", "member" : "scalafix.testkit.SemanticRuleSuite.afterAll", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#afterAll():Unit", "kind" : "def"}, {"label" : "debugFile", "tail" : "(filename: String): Unit", "member" : "scalafix.testkit.SemanticRuleSuite.debugFile", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#debugFile(filename:String):Unit", "kind" : "def"}, {"label" : "runOn", "tail" : "(diffTest: DiffTest): Unit", "member" : "scalafix.testkit.SemanticRuleSuite.runOn", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#runOn(diffTest:scalafix.testkit.DiffTest):Unit", "kind" : "def"}, {"member" : "scalafix.testkit.SemanticRuleSuite#<init>", "error" : "unsupported entity"}, {"member" : "scalafix.testkit.SemanticRuleSuite#<init>", "error" : "unsupported entity"}, {"member" : "scalafix.testkit.SemanticRuleSuite#<init>", "error" : "unsupported entity"}, {"label" : "expectedOutputSourceroot", "tail" : ": Seq[scala.meta.AbsolutePath]", "member" : "scalafix.testkit.SemanticRuleSuite.expectedOutputSourceroot", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#expectedOutputSourceroot:Seq[meta.AbsolutePath]", "kind" : "val"}, {"label" : "index", "tail" : ": SemanticdbIndex", "member" : "scalafix.testkit.SemanticRuleSuite.index", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#index:scalafix.SemanticdbIndex", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.BeforeAndAfterAll.run", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "beforeAll", "tail" : "(): Unit", "member" : "org.scalatest.BeforeAndAfterAll.beforeAll", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#beforeAll():Unit", "kind" : "def"}, {"label" : "invokeBeforeAllAndAfterAllEvenIfNoTestsAreExpected", "tail" : ": Boolean", "member" : "org.scalatest.BeforeAndAfterAll.invokeBeforeAllAndAfterAllEvenIfNoTestsAreExpected", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#invokeBeforeAllAndAfterAllEvenIfNoTestsAreExpected:Boolean", "kind" : "val"}, {"label" : "fileModificationTimeOrEpoch", "tail" : "(file: File): String", "member" : "scalafix.testkit.DiffAssertions.fileModificationTimeOrEpoch", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#fileModificationTimeOrEpoch(file:java.io.File):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: Seq[String], revised: Seq[String]): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#compareContents(original:Seq[String],revised:Seq[String]):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: String, revised: String): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#compareContents(original:String,revised:String):String", "kind" : "def"}, {"label" : "trailingSpace", "tail" : "(str: String): String", "member" : "scalafix.testkit.DiffAssertions.trailingSpace", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#trailingSpace(str:String):String", "kind" : "def"}, {"label" : "assertNoDiff", "tail" : "(obtained: String, expected: String, title: String): Boolean", "member" : "scalafix.testkit.DiffAssertions.assertNoDiff", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertNoDiff(obtained:String,expected:String,title:String):Boolean", "kind" : "def"}, {"label" : "error2message", "tail" : "(obtained: String, expected: String): String", "member" : "scalafix.testkit.DiffAssertions.error2message", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#error2message(obtained:String,expected:String):String", "kind" : "def"}, {"label" : "header", "tail" : "(t: T): String", "member" : "scalafix.testkit.DiffAssertions.header", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#header[T](t:T):String", "kind" : "def"}, {"label" : "assertEqual", "tail" : "(a: A, b: A): Unit", "member" : "scalafix.testkit.DiffAssertions.assertEqual", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertEqual[A](a:A,b:A):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.FunSuite.toString", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.FunSuiteLike.testDataFor", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.FunSuiteLike.styleName", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#styleName:String", "kind" : "final val"}, {"label" : "testsFor", "tail" : "(unit: Unit): Unit", "member" : "org.scalatest.FunSuiteLike.testsFor", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#testsFor(unit:Unit):Unit", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTests", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.FunSuiteLike.tags", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTest", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.FunSuiteLike.testNames", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#testNames:Set[String]", "kind" : "def"}, {"label" : "ignore", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.ignore", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#ignore(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "test", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.test", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#test(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerIgnoredTest", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerTest", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.FunSuiteLike.markup", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.FunSuiteLike.alert", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.FunSuiteLike.note", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.FunSuiteLike.info", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#execute:Unit", "kind" : "final def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/SemanticRuleSuite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/SemanticRuleSuite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "stripTestkitComments", "tail" : "(tokens: scala.meta.Tokens): String", "member" : "scalafix.testkit.SemanticRuleSuite.stripTestkitComments", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#stripTestkitComments(tokens:meta.Tokens):String", "kind" : "def"}, {"label" : "stripTestkitComments", "tail" : "(input: String): String", "member" : "scalafix.testkit.SemanticRuleSuite.stripTestkitComments", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#stripTestkitComments(input:String):String", "kind" : "def"}, {"label" : "LintAssertion", "tail" : ": Regex", "member" : "scalafix.testkit.SemanticRuleSuite.LintAssertion", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#LintAssertion:scala.util.matching.Regex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/SemanticRuleSuite$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/testkit\/SemanticRuleSuite.html", "kind" : "object"}, {"name" : "scalafix.testkit.SyntacticRuleSuite", "shortDescription" : "Utility to unit test syntactic rules", "members_class" : [{"label" : "DiffFailure", "tail" : "", "member" : "scalafix.testkit.DiffAssertions.DiffFailure", "link" : "scalafix\/testkit\/DiffAssertions.html#DiffFailureextendsTestFailedExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "checkDiff", "tail" : "(rule: Rule, original: scala.meta.Input, expected: String): Unit", "member" : "scalafix.testkit.SyntacticRuleSuite.checkDiff", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#checkDiff(rule:scalafix.Rule,original:meta.Input,expected:String):Unit", "kind" : "def"}, {"label" : "checkDiff", "tail" : "(original: scala.meta.Input, expected: String): Unit", "member" : "scalafix.testkit.SyntacticRuleSuite.checkDiff", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#checkDiff(original:meta.Input,expected:String):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(rule: Rule, name: String, original: String, expected: String): Unit", "member" : "scalafix.testkit.SyntacticRuleSuite.check", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#check(rule:scalafix.Rule,name:String,original:String,expected:String):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(name: String, original: String, expected: String): Unit", "member" : "scalafix.testkit.SyntacticRuleSuite.check", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#check(name:String,original:String,expected:String):Unit", "kind" : "def"}, {"member" : "scalafix.testkit.SyntacticRuleSuite#<init>", "error" : "unsupported entity"}, {"label" : "fileModificationTimeOrEpoch", "tail" : "(file: File): String", "member" : "scalafix.testkit.DiffAssertions.fileModificationTimeOrEpoch", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#fileModificationTimeOrEpoch(file:java.io.File):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: Seq[String], revised: Seq[String]): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#compareContents(original:Seq[String],revised:Seq[String]):String", "kind" : "def"}, {"label" : "compareContents", "tail" : "(original: String, revised: String): String", "member" : "scalafix.testkit.DiffAssertions.compareContents", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#compareContents(original:String,revised:String):String", "kind" : "def"}, {"label" : "trailingSpace", "tail" : "(str: String): String", "member" : "scalafix.testkit.DiffAssertions.trailingSpace", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#trailingSpace(str:String):String", "kind" : "def"}, {"label" : "assertNoDiff", "tail" : "(obtained: String, expected: String, title: String): Boolean", "member" : "scalafix.testkit.DiffAssertions.assertNoDiff", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertNoDiff(obtained:String,expected:String,title:String):Boolean", "kind" : "def"}, {"label" : "error2message", "tail" : "(obtained: String, expected: String): String", "member" : "scalafix.testkit.DiffAssertions.error2message", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#error2message(obtained:String,expected:String):String", "kind" : "def"}, {"label" : "header", "tail" : "(t: T): String", "member" : "scalafix.testkit.DiffAssertions.header", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#header[T](t:T):String", "kind" : "def"}, {"label" : "assertEqual", "tail" : "(a: A, b: A): Unit", "member" : "scalafix.testkit.DiffAssertions.assertEqual", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertEqual[A](a:A,b:A):Unit", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.FunSuiteLike.testDataFor", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.FunSuiteLike.styleName", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#styleName:String", "kind" : "final val"}, {"label" : "testsFor", "tail" : "(unit: Unit): Unit", "member" : "org.scalatest.FunSuiteLike.testsFor", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#testsFor(unit:Unit):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FunSuiteLike.run", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTests", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.FunSuiteLike.tags", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.FunSuiteLike.runTest", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.FunSuiteLike.testNames", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#testNames:Set[String]", "kind" : "def"}, {"label" : "ignore", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.ignore", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#ignore(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "test", "tail" : "(testName: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.test", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#test(testName:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "def"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerIgnoredTest", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FunSuiteLike.registerTest", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.FunSuiteLike.markup", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.FunSuiteLike.alert", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.FunSuiteLike.note", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.FunSuiteLike.info", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#execute:Unit", "kind" : "final def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/testkit\/SyntacticRuleSuite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/testkit\/SyntacticRuleSuite.html", "kind" : "class"}], "scalafix.patch" : [{"name" : "scalafix.patch.LowLevelPatch", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/LowLevelPatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/LowLevelPatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/LowLevelPatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/LowLevelPatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/LowLevelPatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/LowLevelPatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/LowLevelPatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/LowLevelPatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/LowLevelPatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/LowLevelPatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/LowLevelPatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/LowLevelPatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/patch\/LowLevelPatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/LowLevelPatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/LowLevelPatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/LowLevelPatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/LowLevelPatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/LowLevelPatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/LowLevelPatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scalafix\/patch\/LowLevelPatch.html", "kind" : "trait"}, {"name" : "scalafix.patch.Patch", "shortDescription" : "A data structure that can produce a .patch file.", "object" : "scalafix\/patch\/Patch$.html", "members_class" : [{"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.nonEmpty", "link" : "scalafix\/patch\/Patch.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.isEmpty", "link" : "scalafix\/patch\/Patch.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "++", "tail" : "(other: Iterable[Patch]): Patch", "member" : "scalafix.patch.Patch.++", "link" : "scalafix\/patch\/Patch.html#++(other:Iterable[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Option[Patch]): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/Patch.html#+(other:Option[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Patch): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/Patch.html#+(other:scalafix.patch.Patch):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/Patch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/Patch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/Patch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/Patch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/Patch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/Patch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/Patch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/Patch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/Patch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/patch\/Patch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/Patch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/Patch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/Patch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/Patch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/Patch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/Patch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unifiedDiff", "tail" : "(original: scala.meta.Input, revised: scala.meta.Input): String", "member" : "scalafix.patch.Patch.unifiedDiff", "link" : "scalafix\/patch\/Patch$.html#unifiedDiff(original:meta.Input,revised:meta.Input):String", "kind" : "def"}, {"label" : "empty", "tail" : ": Patch", "member" : "scalafix.patch.Patch.empty", "link" : "scalafix\/patch\/Patch$.html#empty:scalafix.patch.Patch", "kind" : "val"}, {"label" : "fromIterable", "tail" : "(seq: Iterable[Patch]): Patch", "member" : "scalafix.patch.Patch.fromIterable", "link" : "scalafix\/patch\/Patch$.html#fromIterable(seq:Iterable[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/Patch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/Patch$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/Patch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/Patch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/Patch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/Patch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/Patch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/Patch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/Patch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/Patch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/patch\/Patch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/Patch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/Patch$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/Patch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/Patch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/Patch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/Patch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/patch\/Patch.html", "kind" : "class"}, {"name" : "scalafix.patch.PatchOps", "members_trait" : [{"label" : "rename", "tail" : "(name: Name, toReplace: String): Patch", "member" : "scalafix.patch.PatchOps.rename", "link" : "scalafix\/patch\/PatchOps.html#rename(name:scala.meta.Name,toReplace:String):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/PatchOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/PatchOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/PatchOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/PatchOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/PatchOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/PatchOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/PatchOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/PatchOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/PatchOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/PatchOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/PatchOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/PatchOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/patch\/PatchOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/PatchOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/PatchOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/PatchOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/PatchOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/PatchOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/PatchOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "replaceSymbols", "tail" : "(toReplace: (String, String)*)(index: SemanticdbIndex): Patch", "member" : "scalafix.patch.PatchOps.replaceSymbols", "link" : "scalafix\/patch\/PatchOps.html#replaceSymbols(toReplace:(String,String)*)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "renameSymbol", "tail" : "(fromSymbol: Global, toName: String)(index: SemanticdbIndex): Patch", "member" : "scalafix.patch.PatchOps.renameSymbol", "link" : "scalafix\/patch\/PatchOps.html#renameSymbol(fromSymbol:meta.Symbol.Global,toName:String)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceSymbol", "tail" : "(fromSymbol: Global, toSymbol: Global)(index: SemanticdbIndex): Patch", "member" : "scalafix.patch.PatchOps.replaceSymbol", "link" : "scalafix\/patch\/PatchOps.html#replaceSymbol(fromSymbol:meta.Symbol.Global,toSymbol:meta.Symbol.Global)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addGlobalImport", "tail" : "(symbol: scala.meta.Symbol)(index: SemanticdbIndex): Patch", "member" : "scalafix.patch.PatchOps.addGlobalImport", "link" : "scalafix\/patch\/PatchOps.html#addGlobalImport(symbol:meta.Symbol)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeGlobalImport", "tail" : "(symbol: scala.meta.Symbol)(index: SemanticdbIndex): Patch", "member" : "scalafix.patch.PatchOps.removeGlobalImport", "link" : "scalafix\/patch\/PatchOps.html#removeGlobalImport(symbol:meta.Symbol)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "lint", "tail" : "(msg: LintMessage): Patch", "member" : "scalafix.patch.PatchOps.lint", "link" : "scalafix\/patch\/PatchOps.html#lint(msg:scalafix.LintMessage):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addLeft", "tail" : "(tree: Tree, toAdd: String): Patch", "member" : "scalafix.patch.PatchOps.addLeft", "link" : "scalafix\/patch\/PatchOps.html#addLeft(tree:scala.meta.Tree,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addRight", "tail" : "(tree: Tree, toAdd: String): Patch", "member" : "scalafix.patch.PatchOps.addRight", "link" : "scalafix\/patch\/PatchOps.html#addRight(tree:scala.meta.Tree,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addLeft", "tail" : "(token: scala.meta.Token, toAdd: String): Patch", "member" : "scalafix.patch.PatchOps.addLeft", "link" : "scalafix\/patch\/PatchOps.html#addLeft(token:meta.Token,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addRight", "tail" : "(token: scala.meta.Token, toAdd: String): Patch", "member" : "scalafix.patch.PatchOps.addRight", "link" : "scalafix\/patch\/PatchOps.html#addRight(token:meta.Token,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceTree", "tail" : "(tree: Tree, toReplace: String): Patch", "member" : "scalafix.patch.PatchOps.replaceTree", "link" : "scalafix\/patch\/PatchOps.html#replaceTree(tree:scala.meta.Tree,toReplace:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeToken", "tail" : "(token: scala.meta.Token): Patch", "member" : "scalafix.patch.PatchOps.removeToken", "link" : "scalafix\/patch\/PatchOps.html#removeToken(token:meta.Token):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeTokens", "tail" : "(tokens: scala.meta.Tokens): Patch", "member" : "scalafix.patch.PatchOps.removeTokens", "link" : "scalafix\/patch\/PatchOps.html#removeTokens(tokens:meta.Tokens):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceToken", "tail" : "(token: scala.meta.Token, toReplace: String): Patch", "member" : "scalafix.patch.PatchOps.replaceToken", "link" : "scalafix\/patch\/PatchOps.html#replaceToken(token:meta.Token,toReplace:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addGlobalImport", "tail" : "(importer: Importer): Patch", "member" : "scalafix.patch.PatchOps.addGlobalImport", "link" : "scalafix\/patch\/PatchOps.html#addGlobalImport(importer:scala.meta.Importer):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeImportee", "tail" : "(importee: Importee): Patch", "member" : "scalafix.patch.PatchOps.removeImportee", "link" : "scalafix\/patch\/PatchOps.html#removeImportee(importee:scala.meta.Importee):scalafix.patch.Patch", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scalafix\/patch\/PatchOps.html", "kind" : "trait"}, {"name" : "scalafix.patch.TokenPatch", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scalafix.patch.TokenPatch.toString", "link" : "scalafix\/patch\/TokenPatch.html#toString():String", "kind" : "def"}, {"member" : "scalafix.patch.TokenPatch#<init>", "error" : "unsupported entity"}, {"label" : "newTok", "tail" : ": String", "member" : "scalafix.patch.TokenPatch.newTok", "link" : "scalafix\/patch\/TokenPatch.html#newTok:String", "kind" : "val"}, {"label" : "tok", "tail" : ": Token", "member" : "scalafix.patch.TokenPatch.tok", "link" : "scalafix\/patch\/TokenPatch.html#tok:scala.meta.tokens.Token", "kind" : "val"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.nonEmpty", "link" : "scalafix\/patch\/TokenPatch.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.isEmpty", "link" : "scalafix\/patch\/TokenPatch.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "++", "tail" : "(other: Iterable[Patch]): Patch", "member" : "scalafix.patch.Patch.++", "link" : "scalafix\/patch\/TokenPatch.html#++(other:Iterable[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Option[Patch]): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/TokenPatch.html#+(other:Option[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Patch): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/TokenPatch.html#+(other:scalafix.patch.Patch):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/TokenPatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/TokenPatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/TokenPatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/TokenPatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/TokenPatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/TokenPatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/TokenPatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TokenPatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TokenPatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TokenPatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/TokenPatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/TokenPatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/TokenPatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/TokenPatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/TokenPatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/TokenPatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/TokenPatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/TokenPatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/patch\/TokenPatch.html", "kind" : "class"}, {"name" : "scalafix.patch.TreePatch", "shortDescription" : "", "members_class" : [{"member" : "scalafix.patch.TreePatch#<init>", "error" : "unsupported entity"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.nonEmpty", "link" : "scalafix\/patch\/TreePatch.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scalafix.patch.Patch.isEmpty", "link" : "scalafix\/patch\/TreePatch.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "++", "tail" : "(other: Iterable[Patch]): Patch", "member" : "scalafix.patch.Patch.++", "link" : "scalafix\/patch\/TreePatch.html#++(other:Iterable[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Option[Patch]): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/TreePatch.html#+(other:Option[scalafix.patch.Patch]):scalafix.patch.Patch", "kind" : "def"}, {"label" : "+", "tail" : "(other: Patch): Patch", "member" : "scalafix.patch.Patch.+", "link" : "scalafix\/patch\/TreePatch.html#+(other:scalafix.patch.Patch):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/patch\/TreePatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/patch\/TreePatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/patch\/TreePatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/patch\/TreePatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/patch\/TreePatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/patch\/TreePatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/patch\/TreePatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TreePatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TreePatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/patch\/TreePatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/patch\/TreePatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/patch\/TreePatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/patch\/TreePatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/patch\/TreePatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/patch\/TreePatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/patch\/TreePatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/patch\/TreePatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/patch\/TreePatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/patch\/TreePatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/patch\/TreePatch.html", "kind" : "class"}], "scalafix.syntax" : [{"name" : "scalafix.syntax.XtensionDocument", "shortDescription" : "", "members_class" : [{"label" : "dialect", "tail" : "(): Dialect", "member" : "scalafix.syntax.XtensionDocument.dialect", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#dialect:scala.meta.Dialect", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionDocument#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionDocument.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionDocument.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionDocument.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionInputScalafix", "shortDescription" : "", "members_class" : [{"label" : "label", "tail" : "(): String", "member" : "scalafix.syntax.XtensionInputScalafix.label", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#label:String", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionInputScalafix#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionInputScalafix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionInputScalafix.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionParsedOpt", "shortDescription" : "", "members_class" : [{"label" : "toOption", "tail" : "(): Option[T]", "member" : "scalafix.syntax.XtensionParsedOpt.toOption", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#toOption:Option[T]", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionParsedOpt#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionParsedOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionParsedOpt.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionRefSymbolOpt", "shortDescription" : "", "members_class" : [{"label" : "denotation", "tail" : "(): Option[scala.meta.Denotation]", "member" : "scalafix.syntax.XtensionRefSymbolOpt.denotation", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#denotation:Option[meta.Denotation]", "kind" : "def"}, {"label" : "symbol", "tail" : "(): Option[scala.meta.semanticdb.Symbol]", "member" : "scalafix.syntax.XtensionRefSymbolOpt.symbol", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#symbol:Option[meta.semanticdb.Symbol]", "kind" : "def"}, {"label" : "symbolOpt", "tail" : "(): Option[scala.meta.semanticdb.Symbol]", "member" : "scalafix.syntax.XtensionRefSymbolOpt.symbolOpt", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#symbolOpt:Option[meta.semanticdb.Symbol]", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionRefSymbolOpt#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionRefSymbolOpt.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionSymbol", "shortDescription" : "", "members_class" : [{"label" : "normalized", "tail" : "(): scala.meta.semanticdb.Symbol", "member" : "scalafix.syntax.XtensionSymbol.normalized", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#normalized:meta.semanticdb.Symbol", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionSymbol#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionSymbol.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionSymbolSemanticdbIndex", "shortDescription" : "", "members_class" : [{"label" : "resultType", "tail" : "(): Option[Type]", "member" : "scalafix.syntax.XtensionSymbolSemanticdbIndex.resultType", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#resultType:Option[scala.meta.Type]", "kind" : "def"}, {"label" : "denotation", "tail" : "(): Option[scala.meta.Denotation]", "member" : "scalafix.syntax.XtensionSymbolSemanticdbIndex.denotation", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#denotation:Option[meta.Denotation]", "kind" : "def"}, {"label" : "denotOpt", "tail" : "(): Option[scala.meta.Denotation]", "member" : "scalafix.syntax.XtensionSymbolSemanticdbIndex.denotOpt", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#denotOpt:Option[meta.Denotation]", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionSymbolSemanticdbIndex#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionSymbolSemanticdbIndex.html", "kind" : "class"}, {"name" : "scalafix.syntax.XtensionTreeScalafix", "shortDescription" : "", "members_class" : [{"label" : "input", "tail" : "(): scala.meta.Input", "member" : "scalafix.syntax.XtensionTreeScalafix.input", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#input:meta.Input", "kind" : "def"}, {"label" : "parents", "tail" : "(): Stream[Tree]", "member" : "scalafix.syntax.XtensionTreeScalafix.parents", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#parents:Stream[scala.meta.Tree]", "kind" : "def"}, {"label" : "matches", "tail" : "(matcher: SymbolMatcher): Boolean", "member" : "scalafix.syntax.XtensionTreeScalafix.matches", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#matches(matcher:scalafix.util.SymbolMatcher):Boolean", "kind" : "def"}, {"member" : "scalafix.syntax.XtensionTreeScalafix#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/syntax\/package$$XtensionTreeScalafix.html", "kind" : "class"}], "scalafix.util" : [{"name" : "scalafix.util.Deprecated", "shortDescription" : "Identical to scala.deprecated except it's a case class.", "members_case class" : [{"member" : "scalafix.util.Deprecated#<init>", "error" : "unsupported entity"}, {"label" : "since", "tail" : ": String", "member" : "scalafix.util.Deprecated.since", "link" : "scalafix\/util\/Deprecated.html#since:String", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "scalafix.util.Deprecated.message", "link" : "scalafix\/util\/Deprecated.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Deprecated.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Deprecated.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Deprecated.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Deprecated.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Deprecated.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Deprecated.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Deprecated.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Deprecated.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Deprecated.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Deprecated.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Deprecated.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Deprecated.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Deprecated.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Deprecated.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Deprecated.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Deprecated.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/util\/Deprecated.html", "kind" : "case class"}, {"name" : "scalafix.util.MatchingParens", "shortDescription" : "", "object" : "scalafix\/util\/MatchingParens$.html", "members_class" : [{"label" : "open", "tail" : "(close: RightBrace): Option[LeftBrace]", "member" : "scalafix.util.MatchingParens.open", "link" : "scalafix\/util\/MatchingParens.html#open(close:meta.Token.RightBrace):Option[meta.Token.LeftBrace]", "kind" : "def"}, {"label" : "open", "tail" : "(close: RightBracket): Option[LeftBracket]", "member" : "scalafix.util.MatchingParens.open", "link" : "scalafix\/util\/MatchingParens.html#open(close:meta.Token.RightBracket):Option[meta.Token.LeftBracket]", "kind" : "def"}, {"label" : "open", "tail" : "(close: RightParen): Option[LeftParen]", "member" : "scalafix.util.MatchingParens.open", "link" : "scalafix\/util\/MatchingParens.html#open(close:meta.Token.RightParen):Option[meta.Token.LeftParen]", "kind" : "def"}, {"label" : "close", "tail" : "(open: LeftBrace): Option[RightBrace]", "member" : "scalafix.util.MatchingParens.close", "link" : "scalafix\/util\/MatchingParens.html#close(open:meta.Token.LeftBrace):Option[meta.Token.RightBrace]", "kind" : "def"}, {"label" : "close", "tail" : "(open: LeftBracket): Option[RightBracket]", "member" : "scalafix.util.MatchingParens.close", "link" : "scalafix\/util\/MatchingParens.html#close(open:meta.Token.LeftBracket):Option[meta.Token.RightBracket]", "kind" : "def"}, {"label" : "close", "tail" : "(open: LeftParen): Option[RightParen]", "member" : "scalafix.util.MatchingParens.close", "link" : "scalafix\/util\/MatchingParens.html#close(open:meta.Token.LeftParen):Option[meta.Token.RightParen]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/MatchingParens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/MatchingParens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/MatchingParens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/MatchingParens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/MatchingParens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/MatchingParens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/MatchingParens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/MatchingParens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/MatchingParens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/MatchingParens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/MatchingParens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/MatchingParens.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/MatchingParens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/MatchingParens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/MatchingParens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/MatchingParens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(tokens: scala.meta.Tokens): MatchingParens", "member" : "scalafix.util.MatchingParens.apply", "link" : "scalafix\/util\/MatchingParens$.html#apply(tokens:meta.Tokens):scalafix.util.MatchingParens", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/MatchingParens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/MatchingParens$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/MatchingParens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/MatchingParens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/MatchingParens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/MatchingParens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/MatchingParens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/MatchingParens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/MatchingParens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/MatchingParens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/MatchingParens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/MatchingParens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/MatchingParens$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/MatchingParens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/MatchingParens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/MatchingParens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/MatchingParens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/util\/MatchingParens.html", "kind" : "class"}, {"name" : "scalafix.util.Newline", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Newline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Newline.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Newline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Newline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Newline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Newline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Newline.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Newline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Newline.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Newline.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Newline.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Newline.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Newline.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Newline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Newline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Newline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scalafix\/util\/Newline$.html", "members_object" : [{"label" : "classifier", "tail" : "(): Classifier[T, Newline]", "member" : "scalafix.util.Newline.classifier", "link" : "scalafix\/util\/Newline$.html#classifier[T<:scala.meta.tokens.Token]:scala.meta.classifiers.Classifier[T,scalafix.util.Newline]", "kind" : "implicit def"}, {"label" : "unapply", "tail" : "(token: Token): Boolean", "member" : "scalafix.util.Newline.unapply", "link" : "scalafix\/util\/Newline$.html#unapply(token:scala.meta.tokens.Token):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Newline$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Newline$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Newline$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Newline$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Newline$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Newline$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Newline$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Newline$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Newline$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Newline$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Newline$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Newline$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Newline$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Newline$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Newline$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Newline$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Newline$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scalafix\/util\/Newline.html", "kind" : "trait"}, {"name" : "scalafix.util.SemanticdbIndex", "members_trait" : [{"label" : "Symbol", "tail" : "", "member" : "scalafix.util.SemanticdbIndex.Symbol", "link" : "scalafix\/util\/SemanticdbIndex.html#Symbol", "kind" : "object"}, {"label" : "synthetics", "tail" : "(): Seq[scala.meta.Synthetic]", "member" : "scalafix.util.SemanticdbIndex.synthetics", "link" : "scalafix\/util\/SemanticdbIndex.html#synthetics:Seq[meta.Synthetic]", "kind" : "def"}, {"label" : "symbols", "tail" : "(): Seq[scala.meta.ResolvedSymbol]", "member" : "scalafix.util.SemanticdbIndex.symbols", "link" : "scalafix\/util\/SemanticdbIndex.html#symbols:Seq[meta.ResolvedSymbol]", "kind" : "def"}, {"label" : "messages", "tail" : "(): Seq[scala.meta.Message]", "member" : "scalafix.util.SemanticdbIndex.messages", "link" : "scalafix\/util\/SemanticdbIndex.html#messages:Seq[meta.Message]", "kind" : "def"}, {"label" : "documents", "tail" : "(): Seq[scala.meta.Document]", "member" : "scalafix.util.SemanticdbIndex.documents", "link" : "scalafix\/util\/SemanticdbIndex.html#documents:Seq[meta.Document]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/SemanticdbIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/SemanticdbIndex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/SemanticdbIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/SemanticdbIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/SemanticdbIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/SemanticdbIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/SemanticdbIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/SemanticdbIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/SemanticdbIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/SemanticdbIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/SemanticdbIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/SemanticdbIndex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/SemanticdbIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/SemanticdbIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/SemanticdbIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/SemanticdbIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withDocuments", "tail" : "(documents: Seq[scala.meta.Document]): SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.withDocuments", "link" : "scalafix\/util\/SemanticdbIndex.html#withDocuments(documents:Seq[meta.Document]):scalafix.util.SemanticdbIndex", "kind" : "abstract def"}, {"label" : "denotation", "tail" : "(tree: Tree): Option[scala.meta.Denotation]", "member" : "scalafix.util.SemanticdbIndex.denotation", "link" : "scalafix\/util\/SemanticdbIndex.html#denotation(tree:scala.meta.Tree):Option[meta.Denotation]", "kind" : "abstract def"}, {"label" : "denotation", "tail" : "(symbol: scala.meta.Symbol): Option[scala.meta.Denotation]", "member" : "scalafix.util.SemanticdbIndex.denotation", "link" : "scalafix\/util\/SemanticdbIndex.html#denotation(symbol:meta.Symbol):Option[meta.Denotation]", "kind" : "abstract def"}, {"label" : "symbol", "tail" : "(tree: Tree): Option[scala.meta.Symbol]", "member" : "scalafix.util.SemanticdbIndex.symbol", "link" : "scalafix\/util\/SemanticdbIndex.html#symbol(tree:scala.meta.Tree):Option[meta.Symbol]", "kind" : "abstract def"}, {"label" : "symbol", "tail" : "(position: scala.meta.Position): Option[scala.meta.Symbol]", "member" : "scalafix.util.SemanticdbIndex.symbol", "link" : "scalafix\/util\/SemanticdbIndex.html#symbol(position:meta.Position):Option[meta.Symbol]", "kind" : "abstract def"}, {"label" : "names", "tail" : "(): Seq[scala.meta.ResolvedName]", "member" : "scalafix.util.SemanticdbIndex.names", "link" : "scalafix\/util\/SemanticdbIndex.html#names:Seq[meta.ResolvedName]", "kind" : "abstract def"}, {"label" : "database", "tail" : "(): scala.meta.Database", "member" : "scalafix.util.SemanticdbIndex.database", "link" : "scalafix\/util\/SemanticdbIndex.html#database:meta.Database", "kind" : "abstract def"}, {"label" : "classpath", "tail" : "(): scala.meta.Classpath", "member" : "scalafix.util.SemanticdbIndex.classpath", "link" : "scalafix\/util\/SemanticdbIndex.html#classpath:meta.Classpath", "kind" : "abstract def"}, {"label" : "sourcepath", "tail" : "(): scala.meta.Sourcepath", "member" : "scalafix.util.SemanticdbIndex.sourcepath", "link" : "scalafix\/util\/SemanticdbIndex.html#sourcepath:meta.Sourcepath", "kind" : "abstract def"}], "shortDescription" : "An index for looking up data in a scala.meta.Database.", "object" : "scalafix\/util\/SemanticdbIndex$.html", "members_object" : [{"label" : "load", "tail" : "(bytes: Array[Byte]): SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.load", "link" : "scalafix\/util\/SemanticdbIndex$.html#load(bytes:Array[Byte]):scalafix.util.SemanticdbIndex", "kind" : "def"}, {"label" : "load", "tail" : "(database: scala.meta.Database, sourcepath: scala.meta.Sourcepath, classpath: scala.meta.Classpath): SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.load", "link" : "scalafix\/util\/SemanticdbIndex$.html#load(database:meta.Database,sourcepath:meta.Sourcepath,classpath:meta.Classpath):scalafix.util.SemanticdbIndex", "kind" : "def"}, {"label" : "load", "tail" : "(sourcepath: scala.meta.Sourcepath, classpath: scala.meta.Classpath): SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.load", "link" : "scalafix\/util\/SemanticdbIndex$.html#load(sourcepath:meta.Sourcepath,classpath:meta.Classpath):scalafix.util.SemanticdbIndex", "kind" : "def"}, {"label" : "load", "tail" : "(classpath: scala.meta.Classpath): SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.load", "link" : "scalafix\/util\/SemanticdbIndex$.html#load(classpath:meta.Classpath):scalafix.util.SemanticdbIndex", "kind" : "def"}, {"label" : "empty", "tail" : ": SemanticdbIndex", "member" : "scalafix.util.SemanticdbIndex.empty", "link" : "scalafix\/util\/SemanticdbIndex$.html#empty:scalafix.util.SemanticdbIndex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/SemanticdbIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/SemanticdbIndex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/SemanticdbIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/SemanticdbIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/SemanticdbIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/SemanticdbIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/SemanticdbIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SemanticdbIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/SemanticdbIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/SemanticdbIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/SemanticdbIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/SemanticdbIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/SemanticdbIndex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/SemanticdbIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/SemanticdbIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/SemanticdbIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/SemanticdbIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scalafix\/util\/SemanticdbIndex.html", "kind" : "trait"}, {"name" : "scalafix.util.SymbolMatcher", "shortDescription" : "Utility to match against a particular symbol.", "object" : "scalafix\/util\/SymbolMatcher$.html", "members_class" : [{"label" : "unapply", "tail" : "(symbol: scala.meta.Symbol): Option[scala.meta.Symbol]", "member" : "scalafix.util.SymbolMatcher.unapply", "link" : "scalafix\/util\/SymbolMatcher.html#unapply(symbol:meta.Symbol):Option[meta.Symbol]", "kind" : "def"}, {"label" : "unapply", "tail" : "(tree: Tree): Option[Tree]", "member" : "scalafix.util.SymbolMatcher.unapply", "link" : "scalafix\/util\/SymbolMatcher.html#unapply(tree:scala.meta.Tree):Option[scala.meta.Tree]", "kind" : "def"}, {"label" : "matches", "tail" : "(symbol: scala.meta.Symbol): Boolean", "member" : "scalafix.util.SymbolMatcher.matches", "link" : "scalafix\/util\/SymbolMatcher.html#matches(symbol:meta.Symbol):Boolean", "kind" : "def"}, {"label" : "matches", "tail" : "(tree: Tree): Boolean", "member" : "scalafix.util.SymbolMatcher.matches", "link" : "scalafix\/util\/SymbolMatcher.html#matches(tree:scala.meta.Tree):Boolean", "kind" : "def"}, {"member" : "scalafix.util.SymbolMatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/SymbolMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/SymbolMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/SymbolMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/SymbolMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/SymbolMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/SymbolMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/SymbolMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/SymbolMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/SymbolMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/SymbolMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/SymbolMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/SymbolMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/SymbolMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/SymbolMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/SymbolMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/SymbolMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "normalized", "tail" : "(symbol: scala.meta.Symbol*)(index: SemanticdbIndex): SymbolMatcher", "member" : "scalafix.util.SymbolMatcher.normalized", "link" : "scalafix\/util\/SymbolMatcher$.html#normalized(symbol:meta.Symbol*)(implicitindex:scalafix.util.SemanticdbIndex):scalafix.util.SymbolMatcher", "kind" : "def"}, {"label" : "exact", "tail" : "(symbol: scala.meta.Symbol*)(index: SemanticdbIndex): SymbolMatcher", "member" : "scalafix.util.SymbolMatcher.exact", "link" : "scalafix\/util\/SymbolMatcher$.html#exact(symbol:meta.Symbol*)(implicitindex:scalafix.util.SemanticdbIndex):scalafix.util.SymbolMatcher", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/SymbolMatcher$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/SymbolMatcher$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/SymbolMatcher$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/SymbolMatcher$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/SymbolMatcher$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/SymbolMatcher$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/SymbolMatcher$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/SymbolMatcher$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/SymbolMatcher$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/SymbolMatcher$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/SymbolMatcher$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/SymbolMatcher$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/SymbolMatcher$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/SymbolMatcher$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/SymbolMatcher$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/SymbolMatcher$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/SymbolMatcher$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/util\/SymbolMatcher.html", "kind" : "class"}, {"name" : "scalafix.util.TokenList", "shortDescription" : "Helper to traverse tokens as a doubly linked list.", "members_class" : [{"label" : "prev", "tail" : "(token: Token): Token", "member" : "scalafix.util.TokenList.prev", "link" : "scalafix\/util\/TokenList.html#prev(token:scala.meta.tokens.Token):scala.meta.tokens.Token", "kind" : "def"}, {"label" : "next", "tail" : "(token: Token): Token", "member" : "scalafix.util.TokenList.next", "link" : "scalafix\/util\/TokenList.html#next(token:scala.meta.tokens.Token):scala.meta.tokens.Token", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Token, to: Token): Seq[Token]", "member" : "scalafix.util.TokenList.slice", "link" : "scalafix\/util\/TokenList.html#slice(from:scala.meta.tokens.Token,to:scala.meta.tokens.Token):Seq[scala.meta.tokens.Token]", "kind" : "def"}, {"label" : "find", "tail" : "(start: Token)(f: (Token) ⇒ Boolean): Option[Token]", "member" : "scalafix.util.TokenList.find", "link" : "scalafix\/util\/TokenList.html#find(start:scala.meta.tokens.Token)(f:scala.meta.tokens.Token=>Boolean):Option[scala.meta.tokens.Token]", "kind" : "def"}, {"label" : "leading", "tail" : "(token: Token): SeqView[Token, IndexedSeq[Token]]", "member" : "scalafix.util.TokenList.leading", "link" : "scalafix\/util\/TokenList.html#leading(token:scala.meta.tokens.Token):scala.collection.SeqView[scala.meta.tokens.Token,scala.collection.immutable.IndexedSeq[scala.meta.tokens.Token]]", "kind" : "def"}, {"label" : "trailing", "tail" : "(token: Token): SeqView[Token, IndexedSeq[Token]]", "member" : "scalafix.util.TokenList.trailing", "link" : "scalafix\/util\/TokenList.html#trailing(token:scala.meta.tokens.Token):scala.collection.SeqView[scala.meta.tokens.Token,scala.collection.immutable.IndexedSeq[scala.meta.tokens.Token]]", "kind" : "def"}, {"member" : "scalafix.util.TokenList#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/TokenList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/TokenList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/TokenList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/TokenList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/TokenList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/TokenList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/TokenList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/TokenList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/TokenList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/TokenList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/TokenList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/TokenList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/TokenList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/TokenList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/TokenList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/TokenList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/util\/TokenList.html", "kind" : "class"}, {"name" : "scalafix.util.TokenOps", "shortDescription" : "", "object" : "scalafix\/util\/TokenOps$.html", "members_object" : [{"label" : "needsLeadingSpaceBeforeColon", "tail" : "(ident: Token): Boolean", "member" : "scalafix.util.TokenOps.needsLeadingSpaceBeforeColon", "link" : "scalafix\/util\/TokenOps$.html#needsLeadingSpaceBeforeColon(ident:scala.meta.tokens.Token):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/TokenOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/TokenOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/TokenOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/TokenOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/TokenOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/TokenOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/TokenOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TokenOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/TokenOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/TokenOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/TokenOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/TokenOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/TokenOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/TokenOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/TokenOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/TokenOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/TokenOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scalafix.util.TreeExtractors", "shortDescription" : "", "object" : "scalafix\/util\/TreeExtractors$.html", "members_object" : [{"label" : "Select", "tail" : "", "member" : "scalafix.util.TreeExtractors.Select", "link" : "scalafix\/util\/TreeExtractors$.html#Select", "kind" : "object"}, {"label" : ":&&:", "tail" : "", "member" : "scalafix.util.TreeExtractors.:&&:", "link" : "scalafix\/util\/TreeExtractors$.html#:&&:", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/TreeExtractors$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/TreeExtractors$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/TreeExtractors$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/TreeExtractors$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/TreeExtractors$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/TreeExtractors$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/TreeExtractors$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeExtractors$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeExtractors$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeExtractors$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/TreeExtractors$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/TreeExtractors$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/TreeExtractors$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/TreeExtractors$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/TreeExtractors$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/TreeExtractors$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/TreeExtractors$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/TreeExtractors$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/TreeExtractors$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scalafix.util.TreeOps", "shortDescription" : "", "object" : "scalafix\/util\/TreeOps$.html", "members_object" : [{"label" : "parents", "tail" : "(tree: Tree): Stream[Tree]", "member" : "scalafix.util.TreeOps.parents", "link" : "scalafix\/util\/TreeOps$.html#parents(tree:scala.meta.Tree):Stream[scala.meta.Tree]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/TreeOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/TreeOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/TreeOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/TreeOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/TreeOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/TreeOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/TreeOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/TreeOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/TreeOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/TreeOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/TreeOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/TreeOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/TreeOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/TreeOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/TreeOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/TreeOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/TreeOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scalafix.util.Trivia", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Trivia.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Trivia.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Trivia.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Trivia.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Trivia.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Trivia.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Trivia.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Trivia.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Trivia.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Trivia.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Trivia.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Trivia.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Trivia.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Trivia.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Trivia.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Trivia.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scalafix\/util\/Trivia$.html", "members_object" : [{"label" : "classifier", "tail" : "(): Classifier[T, Trivia]", "member" : "scalafix.util.Trivia.classifier", "link" : "scalafix\/util\/Trivia$.html#classifier[T<:scala.meta.tokens.Token]:scala.meta.classifiers.Classifier[T,scalafix.util.Trivia]", "kind" : "implicit def"}, {"label" : "unapply", "tail" : "(token: Token): Boolean", "member" : "scalafix.util.Trivia.unapply", "link" : "scalafix\/util\/Trivia$.html#unapply(token:scala.meta.tokens.Token):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Trivia$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Trivia$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Trivia$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Trivia$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Trivia$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Trivia$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Trivia$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Trivia$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Trivia$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Trivia$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Trivia$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Trivia$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Trivia$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Trivia$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Trivia$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Trivia$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Trivia$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scalafix\/util\/Trivia.html", "kind" : "trait"}, {"name" : "scalafix.util.Whitespace", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Whitespace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Whitespace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Whitespace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Whitespace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Whitespace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Whitespace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Whitespace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Whitespace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Whitespace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Whitespace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Whitespace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Whitespace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Whitespace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Whitespace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Whitespace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Whitespace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scalafix\/util\/Whitespace$.html", "members_object" : [{"label" : "classifier", "tail" : "(): Classifier[T, Whitespace]", "member" : "scalafix.util.Whitespace.classifier", "link" : "scalafix\/util\/Whitespace$.html#classifier[T<:scala.meta.tokens.Token]:scala.meta.classifiers.Classifier[T,scalafix.util.Whitespace]", "kind" : "implicit def"}, {"label" : "unapply", "tail" : "(token: Token): Boolean", "member" : "scalafix.util.Whitespace.unapply", "link" : "scalafix\/util\/Whitespace$.html#unapply(token:scala.meta.tokens.Token):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/util\/Whitespace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/util\/Whitespace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/util\/Whitespace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/util\/Whitespace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/util\/Whitespace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/util\/Whitespace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/util\/Whitespace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/util\/Whitespace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/util\/Whitespace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/util\/Whitespace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/util\/Whitespace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/util\/Whitespace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/util\/Whitespace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/util\/Whitespace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/util\/Whitespace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/util\/Whitespace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/util\/Whitespace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scalafix\/util\/Whitespace.html", "kind" : "trait"}], "scalafix.rewrite" : [{"name" : "scalafix.rewrite.Rewrite", "shortDescription" : "", "members_class" : [{"label" : "fix", "tail" : "(ctx: rule.RuleCtx): patch.Patch", "member" : "scalafix.rewrite.Rewrite.fix", "link" : "scalafix\/rewrite\/Rewrite.html#fix(ctx:scalafix.rule.RuleCtx):scalafix.patch.Patch", "kind" : "def"}, {"member" : "scalafix.rewrite.Rewrite#<init>", "error" : "unsupported entity"}, {"label" : "semanticOption", "tail" : "(): Option[SemanticdbIndex]", "member" : "scalafix.rule.Rule.semanticOption", "link" : "scalafix\/rewrite\/Rewrite.html#semanticOption:Option[scalafix.SemanticdbIndex]", "kind" : "def"}, {"label" : "name", "tail" : "(): RuleName", "member" : "scalafix.rule.Rule.name", "link" : "scalafix\/rewrite\/Rewrite.html#name:scalafix.rule.RuleName", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.Rule.toString", "link" : "scalafix\/rewrite\/Rewrite.html#toString():String", "kind" : "final def"}, {"label" : "fixWithName", "tail" : "(ctx: rule.RuleCtx): Map[RuleName, Patch]", "member" : "scalafix.rule.Rule.fixWithName", "link" : "scalafix\/rewrite\/Rewrite.html#fixWithName(ctx:scalafix.rule.RuleCtx):Map[scalafix.rule.RuleName,scalafix.Patch]", "kind" : "def"}, {"label" : "diff", "tail" : "(ctx: rule.RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rewrite\/Rewrite.html#diff(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "diff", "tail" : "(ctx: rule.RuleCtx): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rewrite\/Rewrite.html#diff(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx, patches: Map[RuleName, Patch]): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/Rewrite.html#apply(ctx:scalafix.rule.RuleCtx,patches:Map[scalafix.rule.RuleName,scalafix.Patch]):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/Rewrite.html#apply(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: String): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/Rewrite.html#apply(input:String):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: scala.meta.Input, config: internal.config.ScalafixConfig): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/Rewrite.html#apply(input:meta.Input,config:scalafix.internal.config.ScalafixConfig):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/Rewrite.html#apply(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "andThen", "tail" : "(other: rule.Rule): rule.Rule", "member" : "scalafix.rule.Rule.andThen", "link" : "scalafix\/rewrite\/Rewrite.html#andThen(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "merge", "tail" : "(other: rule.Rule): rule.Rule", "member" : "scalafix.rule.Rule.merge", "link" : "scalafix\/rewrite\/Rewrite.html#merge(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "init", "tail" : "(config: Conf): Configured[rule.Rule]", "member" : "scalafix.rule.Rule.init", "link" : "scalafix\/rewrite\/Rewrite.html#init(config:metaconfig.Conf):metaconfig.Configured[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "check", "tail" : "(ctx: rule.RuleCtx): Seq[LintMessage]", "member" : "scalafix.rule.Rule.check", "link" : "scalafix\/rewrite\/Rewrite.html#check(ctx:scalafix.rule.RuleCtx):Seq[scalafix.LintMessage]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rewrite\/Rewrite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rewrite\/Rewrite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rewrite\/Rewrite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rewrite\/Rewrite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rewrite\/Rewrite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rewrite\/Rewrite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rewrite\/Rewrite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/Rewrite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/Rewrite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/Rewrite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rewrite\/Rewrite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rewrite\/Rewrite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rewrite\/Rewrite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rewrite\/Rewrite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rewrite\/Rewrite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rewrite\/Rewrite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rewrite\/Rewrite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rewrite\/Rewrite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "rewrite", "tail" : "(ctx: rule.RuleCtx): patch.Patch", "member" : "scalafix.rewrite.Rewrite.rewrite", "link" : "scalafix\/rewrite\/Rewrite.html#rewrite(ctx:scalafix.rule.RuleCtx):scalafix.patch.Patch", "kind" : "abstract def"}], "class" : "scalafix\/rewrite\/Rewrite.html", "kind" : "class"}, {"name" : "scalafix.rewrite.SemanticRewrite", "shortDescription" : "", "members_class" : [{"label" : "fix", "tail" : "(ctx: rule.RuleCtx): patch.Patch", "member" : "scalafix.rewrite.SemanticRewrite.fix", "link" : "scalafix\/rewrite\/SemanticRewrite.html#fix(ctx:scalafix.rule.RuleCtx):scalafix.patch.Patch", "kind" : "def"}, {"member" : "scalafix.rewrite.SemanticRewrite#<init>", "error" : "unsupported entity"}, {"label" : "semanticOption", "tail" : "(): Option[SemanticdbIndex]", "member" : "scalafix.rule.SemanticRule.semanticOption", "link" : "scalafix\/rewrite\/SemanticRewrite.html#semanticOption:Option[scalafix.SemanticdbIndex]", "kind" : "def"}, {"label" : "semanticCtx", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.semanticCtx", "link" : "scalafix\/rewrite\/SemanticRewrite.html#semanticCtx:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "sctx", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.sctx", "link" : "scalafix\/rewrite\/SemanticRewrite.html#sctx:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "mirror", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.mirror", "link" : "scalafix\/rewrite\/SemanticRewrite.html#mirror:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "ImplicitSemanticdbIndex", "tail" : ": SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.ImplicitSemanticdbIndex", "link" : "scalafix\/rewrite\/SemanticRewrite.html#ImplicitSemanticdbIndex:scalafix.SemanticdbIndex", "kind" : "implicit val"}, {"label" : "name", "tail" : "(): RuleName", "member" : "scalafix.rule.Rule.name", "link" : "scalafix\/rewrite\/SemanticRewrite.html#name:scalafix.rule.RuleName", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.Rule.toString", "link" : "scalafix\/rewrite\/SemanticRewrite.html#toString():String", "kind" : "final def"}, {"label" : "fixWithName", "tail" : "(ctx: rule.RuleCtx): Map[RuleName, Patch]", "member" : "scalafix.rule.Rule.fixWithName", "link" : "scalafix\/rewrite\/SemanticRewrite.html#fixWithName(ctx:scalafix.rule.RuleCtx):Map[scalafix.rule.RuleName,scalafix.Patch]", "kind" : "def"}, {"label" : "diff", "tail" : "(ctx: rule.RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rewrite\/SemanticRewrite.html#diff(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "diff", "tail" : "(ctx: rule.RuleCtx): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rewrite\/SemanticRewrite.html#diff(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx, patches: Map[RuleName, Patch]): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/SemanticRewrite.html#apply(ctx:scalafix.rule.RuleCtx,patches:Map[scalafix.rule.RuleName,scalafix.Patch]):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/SemanticRewrite.html#apply(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: String): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/SemanticRewrite.html#apply(input:String):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: scala.meta.Input, config: internal.config.ScalafixConfig): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/SemanticRewrite.html#apply(input:meta.Input,config:scalafix.internal.config.ScalafixConfig):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: rule.RuleCtx): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rewrite\/SemanticRewrite.html#apply(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "andThen", "tail" : "(other: rule.Rule): rule.Rule", "member" : "scalafix.rule.Rule.andThen", "link" : "scalafix\/rewrite\/SemanticRewrite.html#andThen(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "merge", "tail" : "(other: rule.Rule): rule.Rule", "member" : "scalafix.rule.Rule.merge", "link" : "scalafix\/rewrite\/SemanticRewrite.html#merge(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "init", "tail" : "(config: Conf): Configured[rule.Rule]", "member" : "scalafix.rule.Rule.init", "link" : "scalafix\/rewrite\/SemanticRewrite.html#init(config:metaconfig.Conf):metaconfig.Configured[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "check", "tail" : "(ctx: rule.RuleCtx): Seq[LintMessage]", "member" : "scalafix.rule.Rule.check", "link" : "scalafix\/rewrite\/SemanticRewrite.html#check(ctx:scalafix.rule.RuleCtx):Seq[scalafix.LintMessage]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rewrite\/SemanticRewrite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rewrite\/SemanticRewrite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rewrite\/SemanticRewrite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rewrite\/SemanticRewrite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rewrite\/SemanticRewrite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rewrite\/SemanticRewrite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rewrite\/SemanticRewrite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/SemanticRewrite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/SemanticRewrite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rewrite\/SemanticRewrite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rewrite\/SemanticRewrite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rewrite\/SemanticRewrite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rewrite\/SemanticRewrite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rewrite\/SemanticRewrite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rewrite\/SemanticRewrite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rewrite\/SemanticRewrite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rewrite\/SemanticRewrite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rewrite\/SemanticRewrite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "rewrite", "tail" : "(ctx: rule.RuleCtx): patch.Patch", "member" : "scalafix.rewrite.SemanticRewrite.rewrite", "link" : "scalafix\/rewrite\/SemanticRewrite.html#rewrite(ctx:scalafix.rule.RuleCtx):scalafix.patch.Patch", "kind" : "abstract def"}], "class" : "scalafix\/rewrite\/SemanticRewrite.html", "kind" : "class"}], "scalafix.rule" : [{"name" : "scalafix.rule.Rule", "shortDescription" : "A Scalafix Rule.", "object" : "scalafix\/rule\/Rule$.html", "members_class" : [{"label" : "semanticOption", "tail" : "(): Option[SemanticdbIndex]", "member" : "scalafix.rule.Rule.semanticOption", "link" : "scalafix\/rule\/Rule.html#semanticOption:Option[scalafix.SemanticdbIndex]", "kind" : "def"}, {"label" : "name", "tail" : "(): RuleName", "member" : "scalafix.rule.Rule.name", "link" : "scalafix\/rule\/Rule.html#name:scalafix.rule.RuleName", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.Rule.toString", "link" : "scalafix\/rule\/Rule.html#toString():String", "kind" : "final def"}, {"label" : "fixWithName", "tail" : "(ctx: RuleCtx): Map[RuleName, Patch]", "member" : "scalafix.rule.Rule.fixWithName", "link" : "scalafix\/rule\/Rule.html#fixWithName(ctx:scalafix.rule.RuleCtx):Map[scalafix.rule.RuleName,scalafix.Patch]", "kind" : "def"}, {"label" : "diff", "tail" : "(ctx: RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rule\/Rule.html#diff(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "diff", "tail" : "(ctx: RuleCtx): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rule\/Rule.html#diff(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx, patches: Map[RuleName, Patch]): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/Rule.html#apply(ctx:scalafix.rule.RuleCtx,patches:Map[scalafix.rule.RuleName,scalafix.Patch]):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/Rule.html#apply(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: String): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/Rule.html#apply(input:String):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: scala.meta.Input, config: internal.config.ScalafixConfig): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/Rule.html#apply(input:meta.Input,config:scalafix.internal.config.ScalafixConfig):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/Rule.html#apply(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "andThen", "tail" : "(other: Rule): Rule", "member" : "scalafix.rule.Rule.andThen", "link" : "scalafix\/rule\/Rule.html#andThen(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "merge", "tail" : "(other: Rule): Rule", "member" : "scalafix.rule.Rule.merge", "link" : "scalafix\/rule\/Rule.html#merge(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "init", "tail" : "(config: Conf): Configured[Rule]", "member" : "scalafix.rule.Rule.init", "link" : "scalafix\/rule\/Rule.html#init(config:metaconfig.Conf):metaconfig.Configured[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "fix", "tail" : "(ctx: RuleCtx): Patch", "member" : "scalafix.rule.Rule.fix", "link" : "scalafix\/rule\/Rule.html#fix(ctx:scalafix.rule.RuleCtx):scalafix.Patch", "kind" : "def"}, {"label" : "check", "tail" : "(ctx: RuleCtx): Seq[LintMessage]", "member" : "scalafix.rule.Rule.check", "link" : "scalafix\/rule\/Rule.html#check(ctx:scalafix.rule.RuleCtx):Seq[scalafix.LintMessage]", "kind" : "def"}, {"member" : "scalafix.rule.Rule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/Rule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/Rule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/Rule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/Rule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/Rule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/Rule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/Rule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/Rule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/Rule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/Rule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/Rule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/Rule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/Rule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/Rule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/Rule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "merge", "tail" : "(a: Rule, b: Rule): Rule", "member" : "scalafix.rule.Rule.merge", "link" : "scalafix\/rule\/Rule$.html#merge(a:scalafix.rule.Rule,b:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "def"}, {"label" : "constant", "tail" : "(ruleName: String, patch: Patch, index: SemanticdbIndex): Rule", "member" : "scalafix.rule.Rule.constant", "link" : "scalafix\/rule\/Rule$.html#constant(ruleName:String,patch:scalafix.Patch,index:scalafix.SemanticdbIndex):scalafix.rule.Rule", "kind" : "def"}, {"label" : "semantic", "tail" : "(ruleName: String)(f: (SemanticdbIndex) ⇒ (RuleCtx) ⇒ Patch): (SemanticdbIndex) ⇒ Rule", "member" : "scalafix.rule.Rule.semantic", "link" : "scalafix\/rule\/Rule$.html#semantic(ruleName:String)(f:scalafix.SemanticdbIndex=>(scalafix.rule.RuleCtx=>scalafix.Patch)):scalafix.SemanticdbIndex=>scalafix.rule.Rule", "kind" : "def"}, {"label" : "syntactic", "tail" : "(ruleName: String)(f: (RuleCtx) ⇒ Patch): Rule", "member" : "scalafix.rule.Rule.syntactic", "link" : "scalafix\/rule\/Rule$.html#syntactic(ruleName:String)(f:scalafix.rule.RuleCtx=>scalafix.Patch):scalafix.rule.Rule", "kind" : "def"}, {"label" : "linter", "tail" : "(ruleName: String)(f: (RuleCtx) ⇒ List[LintMessage]): Rule", "member" : "scalafix.rule.Rule.linter", "link" : "scalafix\/rule\/Rule$.html#linter(ruleName:String)(f:scalafix.rule.RuleCtx=>List[scalafix.LintMessage]):scalafix.rule.Rule", "kind" : "def"}, {"label" : "combine", "tail" : "(rules: Seq[Rule]): Rule", "member" : "scalafix.rule.Rule.combine", "link" : "scalafix\/rule\/Rule$.html#combine(rules:Seq[scalafix.rule.Rule]):scalafix.rule.Rule", "kind" : "def"}, {"label" : "emptyFromSemanticdbIndexOpt", "tail" : "(index: Option[SemanticdbIndex]): Rule", "member" : "scalafix.rule.Rule.emptyFromSemanticdbIndexOpt", "link" : "scalafix\/rule\/Rule$.html#emptyFromSemanticdbIndexOpt(index:Option[scalafix.SemanticdbIndex]):scalafix.rule.Rule", "kind" : "def"}, {"label" : "emptyConfigured", "tail" : "(): Configured[Rule]", "member" : "scalafix.rule.Rule.emptyConfigured", "link" : "scalafix\/rule\/Rule$.html#emptyConfigured:metaconfig.Configured[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "empty", "tail" : ": Rule", "member" : "scalafix.rule.Rule.empty", "link" : "scalafix\/rule\/Rule$.html#empty:scalafix.rule.Rule", "kind" : "lazy val"}, {"label" : "syntaxRuleConfDecoder", "tail" : ": ConfDecoder[Rule]", "member" : "scalafix.rule.Rule.syntaxRuleConfDecoder", "link" : "scalafix\/rule\/Rule$.html#syntaxRuleConfDecoder:metaconfig.ConfDecoder[scalafix.rule.Rule]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/Rule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/Rule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/Rule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/Rule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/Rule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/Rule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/Rule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/Rule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/Rule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/Rule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/Rule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/Rule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/Rule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/Rule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/Rule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/Rule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/Rule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/rule\/Rule.html", "kind" : "class"}, {"name" : "scalafix.rule.RuleCtx", "members_trait" : [{"label" : "matching", "tail" : "(): MatchingParens", "member" : "scalafix.rule.RuleCtx.matching", "link" : "scalafix\/rule\/RuleCtx.html#matching:scalafix.util.MatchingParens", "kind" : "def"}, {"label" : "rename", "tail" : "(name: Name, toReplace: String): patch.Patch", "member" : "scalafix.patch.PatchOps.rename", "link" : "scalafix\/rule\/RuleCtx.html#rename(name:scala.meta.Name,toReplace:String):scalafix.patch.Patch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleCtx.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleCtx.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleCtx.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleCtx.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleCtx.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleCtx.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleCtx.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleCtx.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleCtx.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/RuleCtx.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleCtx.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/RuleCtx.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/RuleCtx.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleCtx.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleCtx.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleCtx.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "debugIndex", "tail" : "()(index: util.SemanticdbIndex, fileLine: FileLine): Unit", "member" : "scalafix.rule.RuleCtx.debugIndex", "link" : "scalafix\/rule\/RuleCtx.html#debugIndex()(implicitindex:scalafix.util.SemanticdbIndex,implicitfileLine:org.scalameta.FileLine):Unit", "kind" : "abstract def"}, {"label" : "index", "tail" : "(index: util.SemanticdbIndex): util.SemanticdbIndex", "member" : "scalafix.rule.RuleCtx.index", "link" : "scalafix\/rule\/RuleCtx.html#index(implicitindex:scalafix.util.SemanticdbIndex):scalafix.util.SemanticdbIndex", "kind" : "abstract def"}, {"label" : "comments", "tail" : "(): AssociatedComments", "member" : "scalafix.rule.RuleCtx.comments", "link" : "scalafix\/rule\/RuleCtx.html#comments:scala.meta.contrib.AssociatedComments", "kind" : "abstract def"}, {"label" : "tokenList", "tail" : "(): TokenList", "member" : "scalafix.rule.RuleCtx.tokenList", "link" : "scalafix\/rule\/RuleCtx.html#tokenList:scalafix.util.TokenList", "kind" : "abstract def"}, {"label" : "matchingParens", "tail" : "(): MatchingParens", "member" : "scalafix.rule.RuleCtx.matchingParens", "link" : "scalafix\/rule\/RuleCtx.html#matchingParens:scalafix.util.MatchingParens", "kind" : "abstract def"}, {"label" : "tokens", "tail" : "(): Tokens", "member" : "scalafix.rule.RuleCtx.tokens", "link" : "scalafix\/rule\/RuleCtx.html#tokens:scala.meta.tokens.Tokens", "kind" : "abstract def"}, {"label" : "input", "tail" : "(): scala.meta.Input", "member" : "scalafix.rule.RuleCtx.input", "link" : "scalafix\/rule\/RuleCtx.html#input:meta.Input", "kind" : "abstract def"}, {"label" : "tree", "tail" : "(): Tree", "member" : "scalafix.rule.RuleCtx.tree", "link" : "scalafix\/rule\/RuleCtx.html#tree:scala.meta.Tree", "kind" : "abstract def"}, {"label" : "replaceSymbols", "tail" : "(toReplace: (String, String)*)(index: SemanticdbIndex): patch.Patch", "member" : "scalafix.patch.PatchOps.replaceSymbols", "link" : "scalafix\/rule\/RuleCtx.html#replaceSymbols(toReplace:(String,String)*)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "renameSymbol", "tail" : "(fromSymbol: Global, toName: String)(index: SemanticdbIndex): patch.Patch", "member" : "scalafix.patch.PatchOps.renameSymbol", "link" : "scalafix\/rule\/RuleCtx.html#renameSymbol(fromSymbol:meta.Symbol.Global,toName:String)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceSymbol", "tail" : "(fromSymbol: Global, toSymbol: Global)(index: SemanticdbIndex): patch.Patch", "member" : "scalafix.patch.PatchOps.replaceSymbol", "link" : "scalafix\/rule\/RuleCtx.html#replaceSymbol(fromSymbol:meta.Symbol.Global,toSymbol:meta.Symbol.Global)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addGlobalImport", "tail" : "(symbol: scala.meta.Symbol)(index: SemanticdbIndex): patch.Patch", "member" : "scalafix.patch.PatchOps.addGlobalImport", "link" : "scalafix\/rule\/RuleCtx.html#addGlobalImport(symbol:meta.Symbol)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeGlobalImport", "tail" : "(symbol: scala.meta.Symbol)(index: SemanticdbIndex): patch.Patch", "member" : "scalafix.patch.PatchOps.removeGlobalImport", "link" : "scalafix\/rule\/RuleCtx.html#removeGlobalImport(symbol:meta.Symbol)(implicitindex:scalafix.SemanticdbIndex):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "lint", "tail" : "(msg: LintMessage): patch.Patch", "member" : "scalafix.patch.PatchOps.lint", "link" : "scalafix\/rule\/RuleCtx.html#lint(msg:scalafix.LintMessage):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addLeft", "tail" : "(tree: Tree, toAdd: String): patch.Patch", "member" : "scalafix.patch.PatchOps.addLeft", "link" : "scalafix\/rule\/RuleCtx.html#addLeft(tree:scala.meta.Tree,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addRight", "tail" : "(tree: Tree, toAdd: String): patch.Patch", "member" : "scalafix.patch.PatchOps.addRight", "link" : "scalafix\/rule\/RuleCtx.html#addRight(tree:scala.meta.Tree,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addLeft", "tail" : "(token: scala.meta.Token, toAdd: String): patch.Patch", "member" : "scalafix.patch.PatchOps.addLeft", "link" : "scalafix\/rule\/RuleCtx.html#addLeft(token:meta.Token,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addRight", "tail" : "(token: scala.meta.Token, toAdd: String): patch.Patch", "member" : "scalafix.patch.PatchOps.addRight", "link" : "scalafix\/rule\/RuleCtx.html#addRight(token:meta.Token,toAdd:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceTree", "tail" : "(tree: Tree, toReplace: String): patch.Patch", "member" : "scalafix.patch.PatchOps.replaceTree", "link" : "scalafix\/rule\/RuleCtx.html#replaceTree(tree:scala.meta.Tree,toReplace:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeToken", "tail" : "(token: scala.meta.Token): patch.Patch", "member" : "scalafix.patch.PatchOps.removeToken", "link" : "scalafix\/rule\/RuleCtx.html#removeToken(token:meta.Token):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeTokens", "tail" : "(tokens: scala.meta.Tokens): patch.Patch", "member" : "scalafix.patch.PatchOps.removeTokens", "link" : "scalafix\/rule\/RuleCtx.html#removeTokens(tokens:meta.Tokens):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "replaceToken", "tail" : "(token: scala.meta.Token, toReplace: String): patch.Patch", "member" : "scalafix.patch.PatchOps.replaceToken", "link" : "scalafix\/rule\/RuleCtx.html#replaceToken(token:meta.Token,toReplace:String):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "addGlobalImport", "tail" : "(importer: Importer): patch.Patch", "member" : "scalafix.patch.PatchOps.addGlobalImport", "link" : "scalafix\/rule\/RuleCtx.html#addGlobalImport(importer:scala.meta.Importer):scalafix.patch.Patch", "kind" : "abstract def"}, {"label" : "removeImportee", "tail" : "(importee: Importee): patch.Patch", "member" : "scalafix.patch.PatchOps.removeImportee", "link" : "scalafix\/rule\/RuleCtx.html#removeImportee(importee:scala.meta.Importee):scalafix.patch.Patch", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scalafix\/rule\/RuleCtx$.html", "members_object" : [{"label" : "apply", "tail" : "(tree: Tree): RuleCtx", "member" : "scalafix.rule.RuleCtx.apply", "link" : "scalafix\/rule\/RuleCtx$.html#apply(tree:scala.meta.Tree):scalafix.rule.RuleCtx", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleCtx$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleCtx$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleCtx$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleCtx$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleCtx$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleCtx$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleCtx$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleCtx$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleCtx$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleCtx$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/RuleCtx$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleCtx$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/RuleCtx$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/RuleCtx$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleCtx$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleCtx$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleCtx$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scalafix\/rule\/RuleCtx.html", "kind" : "trait"}, {"name" : "scalafix.rule.RuleIdentifier", "shortDescription" : "A thin wrapper around a string name and optional deprecation warning.", "object" : "scalafix\/rule\/RuleIdentifier$.html", "members_object" : [{"label" : "apply", "tail" : "(value: String): RuleIdentifier", "member" : "scalafix.rule.RuleIdentifier.apply", "link" : "scalafix\/rule\/RuleIdentifier$.html#apply(value:String):scalafix.rule.RuleIdentifier", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleIdentifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleIdentifier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleIdentifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleIdentifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleIdentifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleIdentifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleIdentifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleIdentifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleIdentifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/RuleIdentifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleIdentifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/RuleIdentifier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/RuleIdentifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleIdentifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleIdentifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleIdentifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.RuleIdentifier.toString", "link" : "scalafix\/rule\/RuleIdentifier.html#toString():String", "kind" : "def"}, {"member" : "scalafix.rule.RuleIdentifier#<init>", "error" : "unsupported entity"}, {"label" : "deprecated", "tail" : ": Option[Deprecated]", "member" : "scalafix.rule.RuleIdentifier.deprecated", "link" : "scalafix\/rule\/RuleIdentifier.html#deprecated:Option[scalafix.util.Deprecated]", "kind" : "val"}, {"label" : "value", "tail" : ": String", "member" : "scalafix.rule.RuleIdentifier.value", "link" : "scalafix\/rule\/RuleIdentifier.html#value:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleIdentifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleIdentifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleIdentifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleIdentifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleIdentifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleIdentifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleIdentifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleIdentifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleIdentifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleIdentifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleIdentifier.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleIdentifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleIdentifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleIdentifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/rule\/RuleIdentifier.html", "kind" : "case class"}, {"name" : "scalafix.rule.RuleName", "shortDescription" : "A thin wrapper around a list of RuleIdentifier.", "object" : "scalafix\/rule\/RuleName$.html", "members_object" : [{"label" : "apply", "tail" : "(name: String): RuleName", "member" : "scalafix.rule.RuleName.apply", "link" : "scalafix\/rule\/RuleName$.html#apply(name:String):scalafix.rule.RuleName", "kind" : "def"}, {"label" : "empty", "tail" : ": RuleName", "member" : "scalafix.rule.RuleName.empty", "link" : "scalafix\/rule\/RuleName$.html#empty:scalafix.rule.RuleName", "kind" : "final val"}, {"label" : "generate", "tail" : "(name: Name): RuleName", "member" : "scalafix.rule.RuleName.generate", "link" : "scalafix\/rule\/RuleName$.html#generate(name:sourcecode.Name):scalafix.rule.RuleName", "kind" : "implicit def"}, {"label" : "stringToRuleName", "tail" : "(name: String): RuleName", "member" : "scalafix.rule.RuleName.stringToRuleName", "link" : "scalafix\/rule\/RuleName$.html#stringToRuleName(name:String):scalafix.rule.RuleName", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/RuleName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/RuleName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/RuleName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "reportDeprecationWarning", "tail" : "(name: String, reporter: ScalafixReporter): Unit", "member" : "scalafix.rule.RuleName.reportDeprecationWarning", "link" : "scalafix\/rule\/RuleName.html#reportDeprecationWarning(name:String,reporter:scalafix.internal.config.ScalafixReporter):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.RuleName.toString", "link" : "scalafix\/rule\/RuleName.html#toString():String", "kind" : "def"}, {"label" : "+", "tail" : "(other: RuleName): RuleName", "member" : "scalafix.rule.RuleName.+", "link" : "scalafix\/rule\/RuleName.html#+(other:scalafix.rule.RuleName):scalafix.rule.RuleName", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scalafix.rule.RuleName.isEmpty", "link" : "scalafix\/rule\/RuleName.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): String", "member" : "scalafix.rule.RuleName.value", "link" : "scalafix\/rule\/RuleName.html#value:String", "kind" : "def"}, {"label" : "withOldName", "tail" : "(name: String, message: String, since: String): RuleName", "member" : "scalafix.rule.RuleName.withOldName", "link" : "scalafix\/rule\/RuleName.html#withOldName(name:String,message:String,since:String):scalafix.rule.RuleName", "kind" : "def"}, {"label" : "withDeprecatedName", "tail" : "(name: String, message: String, since: String): RuleName", "member" : "scalafix.rule.RuleName.withDeprecatedName", "link" : "scalafix\/rule\/RuleName.html#withDeprecatedName(name:String,message:String,since:String):scalafix.rule.RuleName", "kind" : "def"}, {"member" : "scalafix.rule.RuleName#<init>", "error" : "unsupported entity"}, {"label" : "identifiers", "tail" : ": List[RuleIdentifier]", "member" : "scalafix.rule.RuleName.identifiers", "link" : "scalafix\/rule\/RuleName.html#identifiers:List[scalafix.rule.RuleIdentifier]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/RuleName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/RuleName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/RuleName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/RuleName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/RuleName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/RuleName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/RuleName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/RuleName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/RuleName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/RuleName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/RuleName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/RuleName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/RuleName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/RuleName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/rule\/RuleName.html", "kind" : "case class"}, {"name" : "scalafix.rule.ScalafixRules", "shortDescription" : "", "object" : "scalafix\/rule\/ScalafixRules$.html", "members_object" : [{"label" : "allNames", "tail" : "(): List[String]", "member" : "scalafix.rule.ScalafixRules.allNames", "link" : "scalafix\/rule\/ScalafixRules$.html#allNames:List[String]", "kind" : "def"}, {"label" : "semanticNames", "tail" : ": List[String]", "member" : "scalafix.rule.ScalafixRules.semanticNames", "link" : "scalafix\/rule\/ScalafixRules$.html#semanticNames:List[String]", "kind" : "lazy val"}, {"label" : "syntacticNames", "tail" : ": List[String]", "member" : "scalafix.rule.ScalafixRules.syntacticNames", "link" : "scalafix\/rule\/ScalafixRules$.html#syntacticNames:List[String]", "kind" : "lazy val"}, {"label" : "syntaxName2rule", "tail" : ": Map[String, Rule]", "member" : "scalafix.rule.ScalafixRules.syntaxName2rule", "link" : "scalafix\/rule\/ScalafixRules$.html#syntaxName2rule:Map[String,scalafix.rule.Rule]", "kind" : "lazy val"}, {"label" : "name2rule", "tail" : "(index: SemanticdbIndex): Map[String, Rule]", "member" : "scalafix.rule.ScalafixRules.name2rule", "link" : "scalafix\/rule\/ScalafixRules$.html#name2rule(index:scalafix.SemanticdbIndex):Map[String,scalafix.rule.Rule]", "kind" : "def"}, {"label" : "all", "tail" : "(index: SemanticdbIndex): List[Rule]", "member" : "scalafix.rule.ScalafixRules.all", "link" : "scalafix\/rule\/ScalafixRules$.html#all(index:scalafix.SemanticdbIndex):List[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "semantic", "tail" : "(index: SemanticdbIndex): List[Rule]", "member" : "scalafix.rule.ScalafixRules.semantic", "link" : "scalafix\/rule\/ScalafixRules$.html#semantic(index:scalafix.SemanticdbIndex):List[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "syntax", "tail" : ": List[Rule]", "member" : "scalafix.rule.ScalafixRules.syntax", "link" : "scalafix\/rule\/ScalafixRules$.html#syntax:List[scalafix.rule.Rule]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/ScalafixRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/ScalafixRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/ScalafixRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/ScalafixRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/ScalafixRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/ScalafixRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/ScalafixRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/ScalafixRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/ScalafixRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/ScalafixRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/ScalafixRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/ScalafixRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/rule\/ScalafixRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/ScalafixRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/ScalafixRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/ScalafixRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/ScalafixRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/ScalafixRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/ScalafixRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scalafix.rule.SemanticRule", "shortDescription" : "", "members_class" : [{"label" : "semanticOption", "tail" : "(): Option[SemanticdbIndex]", "member" : "scalafix.rule.SemanticRule.semanticOption", "link" : "scalafix\/rule\/SemanticRule.html#semanticOption:Option[scalafix.SemanticdbIndex]", "kind" : "def"}, {"label" : "semanticCtx", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.semanticCtx", "link" : "scalafix\/rule\/SemanticRule.html#semanticCtx:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "sctx", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.sctx", "link" : "scalafix\/rule\/SemanticRule.html#sctx:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "mirror", "tail" : "(): SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.mirror", "link" : "scalafix\/rule\/SemanticRule.html#mirror:scalafix.SemanticdbIndex", "kind" : "def"}, {"label" : "ImplicitSemanticdbIndex", "tail" : ": SemanticdbIndex", "member" : "scalafix.rule.SemanticRule.ImplicitSemanticdbIndex", "link" : "scalafix\/rule\/SemanticRule.html#ImplicitSemanticdbIndex:scalafix.SemanticdbIndex", "kind" : "implicit val"}, {"member" : "scalafix.rule.SemanticRule#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : "(): RuleName", "member" : "scalafix.rule.Rule.name", "link" : "scalafix\/rule\/SemanticRule.html#name:scalafix.rule.RuleName", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafix.rule.Rule.toString", "link" : "scalafix\/rule\/SemanticRule.html#toString():String", "kind" : "final def"}, {"label" : "fixWithName", "tail" : "(ctx: RuleCtx): Map[RuleName, Patch]", "member" : "scalafix.rule.Rule.fixWithName", "link" : "scalafix\/rule\/SemanticRule.html#fixWithName(ctx:scalafix.rule.RuleCtx):Map[scalafix.rule.RuleName,scalafix.Patch]", "kind" : "def"}, {"label" : "diff", "tail" : "(ctx: RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rule\/SemanticRule.html#diff(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "diff", "tail" : "(ctx: RuleCtx): String", "member" : "scalafix.rule.Rule.diff", "link" : "scalafix\/rule\/SemanticRule.html#diff(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx, patches: Map[RuleName, Patch]): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/SemanticRule.html#apply(ctx:scalafix.rule.RuleCtx,patches:Map[scalafix.rule.RuleName,scalafix.Patch]):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx, patch: Patch): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/SemanticRule.html#apply(ctx:scalafix.rule.RuleCtx,patch:scalafix.Patch):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: String): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/SemanticRule.html#apply(input:String):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: scala.meta.Input, config: internal.config.ScalafixConfig): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/SemanticRule.html#apply(input:meta.Input,config:scalafix.internal.config.ScalafixConfig):String", "kind" : "final def"}, {"label" : "apply", "tail" : "(ctx: RuleCtx): String", "member" : "scalafix.rule.Rule.apply", "link" : "scalafix\/rule\/SemanticRule.html#apply(ctx:scalafix.rule.RuleCtx):String", "kind" : "final def"}, {"label" : "andThen", "tail" : "(other: Rule): Rule", "member" : "scalafix.rule.Rule.andThen", "link" : "scalafix\/rule\/SemanticRule.html#andThen(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "merge", "tail" : "(other: Rule): Rule", "member" : "scalafix.rule.Rule.merge", "link" : "scalafix\/rule\/SemanticRule.html#merge(other:scalafix.rule.Rule):scalafix.rule.Rule", "kind" : "final def"}, {"label" : "init", "tail" : "(config: Conf): Configured[Rule]", "member" : "scalafix.rule.Rule.init", "link" : "scalafix\/rule\/SemanticRule.html#init(config:metaconfig.Conf):metaconfig.Configured[scalafix.rule.Rule]", "kind" : "def"}, {"label" : "fix", "tail" : "(ctx: RuleCtx): Patch", "member" : "scalafix.rule.Rule.fix", "link" : "scalafix\/rule\/SemanticRule.html#fix(ctx:scalafix.rule.RuleCtx):scalafix.Patch", "kind" : "def"}, {"label" : "check", "tail" : "(ctx: RuleCtx): Seq[LintMessage]", "member" : "scalafix.rule.Rule.check", "link" : "scalafix\/rule\/SemanticRule.html#check(ctx:scalafix.rule.RuleCtx):Seq[scalafix.LintMessage]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/rule\/SemanticRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/rule\/SemanticRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/rule\/SemanticRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/rule\/SemanticRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/rule\/SemanticRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/rule\/SemanticRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/rule\/SemanticRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/SemanticRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/SemanticRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/rule\/SemanticRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/rule\/SemanticRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/rule\/SemanticRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/rule\/SemanticRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/rule\/SemanticRule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/rule\/SemanticRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/rule\/SemanticRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/rule\/SemanticRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/rule\/SemanticRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/rule\/SemanticRule.html", "kind" : "class"}], "scalafix.lint" : [{"name" : "scalafix.lint.LintCategory", "shortDescription" : "A unique identifier for one kind of a linter message.", "object" : "scalafix\/lint\/LintCategory$.html", "members_object" : [{"label" : "warning", "tail" : "(explain: String): LintCategory", "member" : "scalafix.lint.LintCategory.warning", "link" : "scalafix\/lint\/LintCategory$.html#warning(explain:String):scalafix.lint.LintCategory", "kind" : "def"}, {"label" : "warning", "tail" : "(id: String, explain: String): LintCategory", "member" : "scalafix.lint.LintCategory.warning", "link" : "scalafix\/lint\/LintCategory$.html#warning(id:String,explain:String):scalafix.lint.LintCategory", "kind" : "def"}, {"label" : "error", "tail" : "(explain: String): LintCategory", "member" : "scalafix.lint.LintCategory.error", "link" : "scalafix\/lint\/LintCategory$.html#error(explain:String):scalafix.lint.LintCategory", "kind" : "def"}, {"label" : "error", "tail" : "(id: String, explain: String): LintCategory", "member" : "scalafix.lint.LintCategory.error", "link" : "scalafix\/lint\/LintCategory$.html#error(id:String,explain:String):scalafix.lint.LintCategory", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/lint\/LintCategory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/lint\/LintCategory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/lint\/LintCategory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/lint\/LintCategory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/lint\/LintCategory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/lint\/LintCategory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/lint\/LintCategory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/lint\/LintCategory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/lint\/LintCategory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/lint\/LintCategory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/lint\/LintCategory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/lint\/LintCategory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/lint\/LintCategory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/lint\/LintCategory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/lint\/LintCategory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/lint\/LintCategory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "at", "tail" : "(position: scala.meta.inputs.Position): LintMessage", "member" : "scalafix.lint.LintCategory.at", "link" : "scalafix\/lint\/LintCategory.html#at(position:meta.inputs.Position):scalafix.lint.LintMessage", "kind" : "def"}, {"label" : "at", "tail" : "(message: String): LintMessage", "member" : "scalafix.lint.LintCategory.at", "link" : "scalafix\/lint\/LintCategory.html#at(message:String):scalafix.lint.LintMessage", "kind" : "def"}, {"label" : "at", "tail" : "(message: String, position: scala.meta.inputs.Position): LintMessage", "member" : "scalafix.lint.LintCategory.at", "link" : "scalafix\/lint\/LintCategory.html#at(message:String,position:meta.inputs.Position):scalafix.lint.LintMessage", "kind" : "def"}, {"label" : "key", "tail" : "(owner: RuleName): String", "member" : "scalafix.lint.LintCategory.key", "link" : "scalafix\/lint\/LintCategory.html#key(owner:scalafix.rule.RuleName):String", "kind" : "def"}, {"member" : "scalafix.lint.LintCategory#<init>", "error" : "unsupported entity"}, {"label" : "severity", "tail" : ": LintSeverity", "member" : "scalafix.lint.LintCategory.severity", "link" : "scalafix\/lint\/LintCategory.html#severity:scalafix.lint.LintSeverity", "kind" : "val"}, {"label" : "explanation", "tail" : ": String", "member" : "scalafix.lint.LintCategory.explanation", "link" : "scalafix\/lint\/LintCategory.html#explanation:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "scalafix.lint.LintCategory.id", "link" : "scalafix\/lint\/LintCategory.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/lint\/LintCategory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/lint\/LintCategory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/lint\/LintCategory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/lint\/LintCategory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/lint\/LintCategory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/lint\/LintCategory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/lint\/LintCategory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintCategory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/lint\/LintCategory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/lint\/LintCategory.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/lint\/LintCategory.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/lint\/LintCategory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/lint\/LintCategory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/lint\/LintCategory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/lint\/LintCategory.html", "kind" : "case class"}, {"name" : "scalafix.lint.LintMessage", "shortDescription" : "An observation of a LintCategory at a particular position", "members_case class" : [{"label" : "format", "tail" : "(owner: RuleName, explain: Boolean): String", "member" : "scalafix.lint.LintMessage.format", "link" : "scalafix\/lint\/LintMessage.html#format(owner:scalafix.rule.RuleName,explain:Boolean):String", "kind" : "def"}, {"member" : "scalafix.lint.LintMessage#<init>", "error" : "unsupported entity"}, {"label" : "category", "tail" : ": LintCategory", "member" : "scalafix.lint.LintMessage.category", "link" : "scalafix\/lint\/LintMessage.html#category:scalafix.lint.LintCategory", "kind" : "val"}, {"label" : "position", "tail" : ": scala.meta.Position", "member" : "scalafix.lint.LintMessage.position", "link" : "scalafix\/lint\/LintMessage.html#position:meta.Position", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "scalafix.lint.LintMessage.message", "link" : "scalafix\/lint\/LintMessage.html#message:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/lint\/LintMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/lint\/LintMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/lint\/LintMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/lint\/LintMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/lint\/LintMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/lint\/LintMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/lint\/LintMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/lint\/LintMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/lint\/LintMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/lint\/LintMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/lint\/LintMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/lint\/LintMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/lint\/LintMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scalafix\/lint\/LintMessage.html", "kind" : "case class"}, {"name" : "scalafix.lint.LintSeverity", "shortDescription" : "", "object" : "scalafix\/lint\/LintSeverity$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scalafix.lint.LintSeverity.toString", "link" : "scalafix\/lint\/LintSeverity.html#toString():String", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scalafix.lint.LintSeverity.isError", "link" : "scalafix\/lint\/LintSeverity.html#isError:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/lint\/LintSeverity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/lint\/LintSeverity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/lint\/LintSeverity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/lint\/LintSeverity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/lint\/LintSeverity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/lint\/LintSeverity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/lint\/LintSeverity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/lint\/LintSeverity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/lint\/LintSeverity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/lint\/LintSeverity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/lint\/LintSeverity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/lint\/LintSeverity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/lint\/LintSeverity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/lint\/LintSeverity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/lint\/LintSeverity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Error", "tail" : "", "member" : "scalafix.lint.LintSeverity.Error", "link" : "scalafix\/lint\/LintSeverity$.html#Error", "kind" : "object"}, {"label" : "Warning", "tail" : "", "member" : "scalafix.lint.LintSeverity.Warning", "link" : "scalafix\/lint\/LintSeverity$.html#Warning", "kind" : "object"}, {"label" : "Info", "tail" : "", "member" : "scalafix.lint.LintSeverity.Info", "link" : "scalafix\/lint\/LintSeverity$.html#Info", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scalafix\/lint\/LintSeverity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scalafix\/lint\/LintSeverity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scalafix\/lint\/LintSeverity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scalafix\/lint\/LintSeverity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scalafix\/lint\/LintSeverity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scalafix\/lint\/LintSeverity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scalafix\/lint\/LintSeverity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scalafix\/lint\/LintSeverity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scalafix\/lint\/LintSeverity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scalafix\/lint\/LintSeverity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scalafix\/lint\/LintSeverity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scalafix\/lint\/LintSeverity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scalafix\/lint\/LintSeverity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scalafix\/lint\/LintSeverity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scalafix\/lint\/LintSeverity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scalafix\/lint\/LintSeverity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scalafix\/lint\/LintSeverity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scalafix\/lint\/LintSeverity.html", "kind" : "class"}]};